<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LucasTafarelBS :)</title>
    <description>Website pessoal para retribuir à comunidade com um pouco dos conhecimentos adquiridos nela :)
</description>
    <link>lucastafarelbs.github.io/</link>
    <atom:link href="lucastafarelbs.github.io/feed.xml" rel="self" type="application/rss+xml"/>
<<<<<<< HEAD
<<<<<<< HEAD
    <pubDate>Tue, 21 Nov 2017 23:10:23 -0200</pubDate>
    <lastBuildDate>Tue, 21 Nov 2017 23:10:23 -0200</lastBuildDate>
=======
    <pubDate>Wed, 22 Nov 2017 00:37:02 -0200</pubDate>
    <lastBuildDate>Wed, 22 Nov 2017 00:37:02 -0200</lastBuildDate>
>>>>>>> novoLayout
=======
    <pubDate>Wed, 22 Nov 2017 02:21:30 -0200</pubDate>
    <lastBuildDate>Wed, 22 Nov 2017 02:21:30 -0200</lastBuildDate>
>>>>>>> novoLayout
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>Curso GRÁTIS de Vue.js 2.x</title>
        <description>&lt;img src=&quot;/assets/img/vue-wallpaper.jpg&quot; alt=&quot;Curso Grátis de Vue.js&quot; class=&quot;basic-margin-bottom&quot;&gt;


&lt;p&gt;Você aí, dev, está a fim de começar seus estudos com Vue.js, porém não sabe por onde começar e onde estudar? Que tal aprender em um curso totalmente prático e totalmente gratuito? Então vem com a gente!&lt;/p&gt;

&lt;p&gt;
  &lt;a href=&quot;https://github.com/Halfeld&quot; target=&quot;_blank&quot;&gt;Igor Luiz&lt;/a&gt; e &lt;a href=&quot;https://github.com/ednilsonamaral&quot; target=&quot;_blank&quot;&gt;eu&lt;/a&gt; estamos iniciando um &lt;strong&gt;Curso Prático de Vue.js&lt;/strong&gt; pela &lt;a href=&quot;https://github.com/Webschool-io&quot; target=&quot;_blank&quot;&gt;Webschool&lt;/a&gt;. E já disponibilizamos três aulas com vocês..&lt;/p&gt;

&lt;p&gt;Assistam, e assistam de novo, e de novo e de novo. Curta e compartilhe com seus colegas, amigos, namorada(o), esposa(o), filho(a), COM TODOS!&lt;/p&gt;


&lt;iframe src=&quot;https://www.youtube.com/embed/videoseries?list=PL77JVjKTJT2hpxOjdD6VDc1JDXAKs08z5&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 06 Feb 2017 23:06:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/curso-vue-js/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/curso-vue-js/</guid>
        
        
      </item>
    
      <item>
        <title>Desenvolvendo componentes com Vue.js 2</title>
        <description>&lt;p&gt;Olá! Olá! Olá! Olá! Como é que você está?&lt;/p&gt;

&lt;p&gt;Depois de meses sem postar nada no blog, passando dias e mais dias com a mentalidade &lt;strong&gt;preciso melhorar meu tema e postar mais artigos&lt;/strong&gt; todo dia e deixando de lado, 2017 não vai acontecer isso! Em 2017, tracei como &lt;strong&gt;meta&lt;/strong&gt; postar no mínimo dois artigos por mês, exceto janeiro, que já era (rsrsrs), independente da disponibilidade de tempo devido aos trabalhos.&lt;/p&gt;

&lt;p&gt;E nada melhor que começar o “ano” falando sobre o meu mais novo queridinho, &lt;strong&gt;Vue.js&lt;/strong&gt;!!&lt;/p&gt;

&lt;h2 id=&quot;o-que-é-vuejs&quot;&gt;O que é Vue.js?&lt;/h2&gt;

&lt;p&gt;Primeiramente vamos aprender a pronúncia correta. Fala-se &lt;strong&gt;view&lt;/strong&gt; (/vjuː/) e não &lt;strong&gt;vue&lt;/strong&gt;. Ele foi criado pelo &lt;a href=&quot;https://github.com/yyx990803&quot;&gt;Evan You&lt;/a&gt; em 2014.&lt;/p&gt;

&lt;p&gt;O Vue.js é um framework javascript progressivo, para desenvolvermos interfaces web robustas e complexas. Ele é baseado em componentes reativos para aplicações web modernas. Com ele, como já citado, podemos criar aplicações web iterativas, complexas e robustas.&lt;/p&gt;

&lt;p&gt;Ele não é considerado um framework full stack, ou seja do back-end ao front-end. Ele é focado &lt;strong&gt;exclusivamente&lt;/strong&gt; para a camada da &lt;strong&gt;view&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Podemos construir uma aplicação complexa facilmente com Vue.js e trabalhar o back-end bem como entendermos, em qualquer stack.&lt;/p&gt;

&lt;p&gt;O Vue.js destaca-se entre outros frameworks principalmente pela sua simplicidade e métodos de como trabalhar, baseado em componentes e focado apenas na view da sua aplicação.&lt;/p&gt;

&lt;p&gt;Não irei entrar em detalhes do que é e como ele funciona. Para isso, meu amigo &lt;a href=&quot;https://github.com/Halfeld&quot;&gt;Igor Luiz&lt;/a&gt; e eu estamos desenvolvendo um curso prático de Vue.js pela Webschool.io e estará disponível nas próximas semanas, ainda nesse mês de fevereiro. Então, você não conhece Vue.js? Poderá &lt;strong&gt;estudar de graça&lt;/strong&gt;! Assim que as aulas estiverem disponíveis ao público, irei postar um artigo especial aqui no blog! :D&lt;/p&gt;

&lt;p&gt;Esse artigo tratará apenas de desenvolvimento de componentes básicos com Vue.js. É necessário ter uma familiriadade básica com Vue.js para dar continuidade na leitura..&lt;/p&gt;

&lt;h2 id=&quot;o-que-são-componentes-como-pensar-em-componentes&quot;&gt;O que são componentes? Como pensar em componentes?&lt;/h2&gt;

&lt;p&gt;Tudo são e pode ser um componente(s)! Vejamos a imagem abaixo e vamos analisar com calma.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/vue-compoentes.png&quot; alt=&quot;Exemplo de Componentes&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;O &lt;strong&gt;header&lt;/strong&gt;, com o logo e um menu simples é um &lt;strong&gt;COMPONENTE&lt;/strong&gt;. No Vue.js, se formos pensar em modularização, poderiamos criar mais 2 componentes, 1 para o logotipo e título e mais 1 para o menu ao lado.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;O &lt;strong&gt;main content&lt;/strong&gt;, com o texto e botão é um &lt;strong&gt;COMPONENTE&lt;/strong&gt;. Aqui, também poderia dividir em mais 3 componentes: título, texto e botão.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;O &lt;strong&gt;footer&lt;/strong&gt;, com os créditos do projeto é um &lt;strong&gt;COMPONENTE&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Um simples exemplo de componentes, &lt;strong&gt;tudo pode ser componente, tudo&lt;/strong&gt;! No começo pode ser um pouquinho complicado entender esse conceito, mas depois que entender, vai que vai, filhão. Trabalhar com componentes no Vue.js irá facilitar o desenvolvimento de nossa aplicação em 110%. &lt;strong&gt;O Vue.js é para componentes!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;vue-cli&quot;&gt;vue-cli&lt;/h2&gt;

&lt;p&gt;Nesse projeto, utilizei o template do webpack disponibilizado pelo &lt;strong&gt;vue-cli&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;É uma ferramenta com o intuito de facilitar a criação de projetos. Responsável por criar alguns templates para projetos em Vue.js.&lt;/p&gt;

&lt;p&gt;Para instalar o &lt;strong&gt;vue-cli&lt;/strong&gt; basta executar o seguinte comando: &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install -g vue-cli&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Para visualizar os templates disponíveis basta executar o seguinte comando: &lt;code class=&quot;highlighter-rouge&quot;&gt;vue list&lt;/code&gt;. E para criar um projeto com um template padrão do &lt;strong&gt;vue-cli&lt;/strong&gt;, basta executar o seguinte comando: &lt;code class=&quot;highlighter-rouge&quot;&gt;vue init nome_template nome_projeto&lt;/code&gt;, por exemplo, &lt;code class=&quot;highlighter-rouge&quot;&gt;vue init webpack vue-webpack&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ele irá instalar o projeto dividido em vários arquivos e pastas, vamos descobrir o que cada pasta possui e qual é sua responsabilidade.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;build&lt;/code&gt;: possui os arquivos de configuração que irão fazer o build da aplicação;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dist&lt;/code&gt;: após realizar &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; o webpack irá compilar o seu projeto para produção, minificando e concatenando todos os arquivos;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;config&lt;/code&gt;: alguns arquivos que precisamos alterar uma coisa ou outra em nosso ambiente;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt;: é o nosso CÓDIGO FONTE, onde iremos brincar pra caramba.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;criando-os-componentes&quot;&gt;Criando os componentes&lt;/h2&gt;

&lt;p&gt;Para criar um componente em um projeto Vue.js é muito simples. Basta criarmos um arquivo com o nome do nosso componente, por exemplo &lt;code class=&quot;highlighter-rouge&quot;&gt;Blog.vue&lt;/code&gt; e importarmos ele no componente global ou especifico, ou nas configurações da nossa rota. O &lt;code class=&quot;highlighter-rouge&quot;&gt;Blog.vue&lt;/code&gt; possui como código:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;Blog&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;style &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;scoped&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;font-weight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#c39e88&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Onde, dentro das tags:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;template&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; irá conter o nosso HTML;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; irá conter o nosso Javascript, onde a mágica acontece;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; irá conter o nosso CSS. Caso você declare &lt;em&gt;scoped&lt;/em&gt; como no exemplo acima, as declarações poderão ser utilizadas &lt;strong&gt;apenas&lt;/strong&gt; nesse componente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Esse é o padrão para criarmos componentes com Vue.js. Podemos criar quantos componentes quisermos, à vontade! E, é fácil e simples! ;)&lt;/p&gt;

&lt;h2 id=&quot;vue-router&quot;&gt;vue-router&lt;/h2&gt;

&lt;p&gt;Como eu crio as rotas com Vue.js? No Angular.js eu sei fazer, mas e aqui, manolo? Com o &lt;strong&gt;vue-router&lt;/strong&gt;!!&lt;/p&gt;

&lt;p&gt;Já sabemos que para desenvolver um projeto em Vue.js é simples, com &lt;strong&gt;vue-router&lt;/strong&gt; é mais simples ainda! Também já sabemos que estamos compondo nossa aplicação com componentes. Então, ao adicionarmos o &lt;strong&gt;vue-router&lt;/strong&gt; ao nosso projeto, o que precisamos fazer é mapear os nossos componentes para as suas respectivas rotas e deixar que o &lt;strong&gt;vue-router&lt;/strong&gt; identifique onde deverá rendelizá-las.&lt;/p&gt;

&lt;p&gt;Para instalar o &lt;strong&gt;vue-router&lt;/strong&gt; na nossa aplicação, basta executarmos os seguintes comandos: &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install --save vue-router&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Feito isso, precisamos informar a nossa aplicação:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Quais são as rotas;&lt;/li&gt;
  &lt;li&gt;Informar ao Vue.js que iremos trabalhar/usar o vue-router;&lt;/li&gt;
  &lt;li&gt;Criar as rotas necessárias do projeto;&lt;/li&gt;
  &lt;li&gt;Chamar as rotas na nossa instância Vue.js.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;Primeiramente, devemos importar o &lt;strong&gt;vue-router&lt;/strong&gt; ao projeto, mais especificamente em &lt;code class=&quot;highlighter-rouge&quot;&gt;main.js&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Informamos ao Vue.js que iremos utilizar/trabalhar como &lt;strong&gt;vue-router&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;Então, criamos as rotas;&lt;/li&gt;
  &lt;li&gt;Por fim, chamamos as rotas na nossa instância Vue.js.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Os 4 passos acima, você pode visualizar com mais calma no código abaixo:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Importanto o Vue e vue-router&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueRouter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'vue-router'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Importanto os componentes da nossa aplicação&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./App.vue'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CcAbout&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./components/About.vue'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CcBlog&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./components/Blog.vue'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CcContact&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'./components/Contact.vue'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Informamos ao Vue.js que iremos utilizar/trabalhar como vue-router&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VueRouter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Então, criamos as rotas&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/about'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CcAbout&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/blog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CcBlog&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/contact'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CcContact&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;VueRouter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Por fim, chamamos as rotas na nossa instância Vue.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Por fim, chamamos as rotas na nossa instância Vue.js&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// el: '#app',&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$mount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'#app'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pronto, as nossas rotas estão prontas! Apenas com isso aí? Sim, só isso! Lógico, se seu projeto possui mais rotas, isso vai aumentar. Mas basicamente é assim que criamos rotas com &lt;strong&gt;Vue.js&lt;/strong&gt; e &lt;strong&gt;vue-router&lt;/strong&gt;! Muito fácil, né?!&lt;/p&gt;

&lt;h2 id=&quot;build-for-production&quot;&gt;Build for production&lt;/h2&gt;

&lt;p&gt;Criei os componentes, populei eles com o conteúdo que gostaria; criei as rotas e mapeei os meus componentes. O que falta agora? Verificar o resultado final e publicar!&lt;/p&gt;

&lt;p&gt;Se utilizarmos o webpack com vue-cli, temos um NPM Script chamado &lt;code class=&quot;highlighter-rouge&quot;&gt;npm run build&lt;/code&gt; que irá fazer todo o build do seu projeto, minificando e concatenando os arquivos de seu projeto e deixá-los prontos para colocar em produção. Não precisa instalar &lt;strong&gt;NADA&lt;/strong&gt; no servidor, basta copiar esses arquivos e já era! Após o webpack realizar o build, ele irá salvar os arquivos necessários na pasta &lt;strong&gt;dist&lt;/strong&gt;!&lt;/p&gt;

&lt;h2 id=&quot;concluindo&quot;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;Esse projeto foi apenas um pequeno exemplo de desenvolvimento de componentes com &lt;strong&gt;Vue.js&lt;/strong&gt; e &lt;strong&gt;vue-router&lt;/strong&gt;. É muito simples e muito fácil. E nada melhor do que praticar desenvolvendo projetos pequenos, entendendo as possibilidades e poderes que temos em mãos para utilizarmos. Com o passar do tempo, conseguiremos desenvolver projetos mais complexos, com inúmeros componentes e rotas, com &lt;strong&gt;Vue.js&lt;/strong&gt; e &lt;strong&gt;vue-router&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;O artigo foi simples, porém espero ter deixado a minha ideia! Não quis entrar a fundo com os poderes do vue-router, apenas o básico e essencial, assim bem como o básico e essencial de desenvolver componentes com Vue.js.&lt;/p&gt;

&lt;p&gt;Qualquer dúvida, sugestão, reclamação, crítica, por favor, deixe um comentário abaixo que lhe responderei rapidinho!&lt;/p&gt;

&lt;p&gt;Você também pode visualizar o resultado final desse projeto através &lt;a href=&quot;http://ednilsonamaral.me/vue-components-example/#/&quot;&gt;desse link&lt;/a&gt; e ver os códigos completos em seu &lt;a href=&quot;https://github.com/ednilsonamaral/vue-components-example&quot;&gt;repositório oficial&lt;/a&gt; no GitHub.&lt;/p&gt;

&lt;p&gt;Abraços, até mais! =D&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Feb 2017 23:36:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/desenvolvendo-componentes-com-vue-js-2/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/desenvolvendo-componentes-com-vue-js-2/</guid>
        
        
      </item>
    
      <item>
        <title>REVIEW - Construindo uma Aplicação E-commerce com MEAN</title>
        <description>&lt;p&gt;Salve salve &lt;em&gt;peoples&lt;/em&gt;, tudo na paz?&lt;/p&gt;

&lt;p&gt;Nas últimas semanas, além dos trabalhos e projetos que já atuo, fiquei envolvido com a leitura e implementação do livro &lt;strong&gt;Construindo uma Aplicação E-commerce com MEAN&lt;/strong&gt;. E hoje, lhes apresento um review desse livro, cujo autor é o &lt;a href=&quot;https://github.com/amejiarosario&quot;&gt;Adrian Meijia&lt;/a&gt;, lançado em inglês pela Packt Publishing em novembro de 2015 e traduzido para português pela &lt;a href=&quot;http://novatec.com.br/livros/ecommerce-mean/&quot;&gt;Novatec&lt;/a&gt; em junho de 2016.&lt;/p&gt;

&lt;p&gt;Se você estava ou ainda esteja na dúvida de comprar esse livro ou não, descubra a resposta para essa dúvida lendo esse post! =)&lt;/p&gt;

&lt;p&gt;Eu tive o prazer de ganhar de presente esse livro da &lt;a href=&quot;http://novatec.com.br/livros/ecommerce-mean/&quot;&gt;Novatec&lt;/a&gt; e da &lt;a href=&quot;http://webschool.io/&quot;&gt;Webschool.io&lt;/a&gt;, muito obrigado Novatec e tio &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;Suissa&lt;/a&gt; por me proporem todo esse conhecimento com esse &lt;strong&gt;excelente&lt;/strong&gt; livro! Não só a mim, mas também ao meu amigo &lt;a href=&quot;https://github.com/hc3&quot;&gt;Eliel&lt;/a&gt;, que também ganhou o livro.&lt;/p&gt;

&lt;p&gt;Vou apresentar uma visão geral do livro e minhas opiniões a respeito. Não vou entrar em detalhes complexos de como são os códigos do livro ou o que poderia ser utilizado no lugar, alguma melhoria, mimimimi. Isso cabe a você, caro leitor, lendo esse livro! :D&lt;/p&gt;

&lt;h2 id=&quot;o-livro&quot;&gt;O Livro&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/meanshop.jpg&quot; alt=&quot;Livro Construindo uma Aplicação E-commerce com MEAN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quem vê o tamanho e espessura do livro se engana, ele é muito objetivo e faz jus ao título. Ele é indicado para programadores com um conhecimento básico em JavaScript e queira expandir esses conhecimentos.&lt;/p&gt;

&lt;p&gt;É dado uma introdução a cada tecnologia que dá nome a stack MEAN. Cita exemplos de empresas que migraram para o NodeJS além de mencionar motivos e benefícios de optarem pelo NodeJS e porque desistiram de frameworks &lt;em&gt;enterprise&lt;/em&gt;, como Spring MVC, Java e RoR.&lt;/p&gt;

&lt;p&gt;Não fica preso a ensinar apenas a stack MEAN, desde conhecimentos básicos e introdutórios a várias tecnologias utilizadas para desenvolver uma aplicação de ecommerce.&lt;/p&gt;

&lt;p&gt;Ao contrário de muitos cursos que encontramos hoje no mercado, ele começa com o front-end, na parte de AngularJS. Para quem é crú mesmo com MEAN. Mostrando algumas diretivas e módulos básicos e essenciais para qualquer aplicação.&lt;/p&gt;

&lt;p&gt;Nos mostra como utilizar o módulo &lt;code class=&quot;highlighter-rouge&quot;&gt;ui-router&lt;/code&gt; no AngularJS e todos os seus benefícios. Até então, eu conhecia apenas o &lt;code class=&quot;highlighter-rouge&quot;&gt;ng-route&lt;/code&gt;. Agora, só usarei o &lt;code class=&quot;highlighter-rouge&quot;&gt;ui-router&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Não entra em detalhes de Style Guide, como o do John Papa, isso é com você, filhote. Mas nos mostra uma visão enorme do poder do AngularJS. A versão utilizada no livro é a 1.x.&lt;/p&gt;

&lt;p&gt;Ainda nos mostra como utilizar &lt;code class=&quot;highlighter-rouge&quot;&gt;factory&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;services&lt;/code&gt; para criamos nossas funções únicas vinculadas aos controllers ou outros componentes usando o &lt;em&gt;Dependency Injection&lt;/em&gt;. Antes de ingressar no back-end, ainda nos mostra um CRUD no AngularJS, que lá na frente, quando chegarmos ao back-end, será apenas refatorado quando necessário.&lt;/p&gt;

&lt;p&gt;O capítulo específico de MongoDB e Mongoose, particularmente, me deu uma percepção que estava fazendo uma revisão das aulas de MongoDB do curso &lt;a href=&quot;http://webschool.io/&quot;&gt;Be MEAN&lt;/a&gt;, do &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;tio Suissa&lt;/a&gt;. Conteúdo excelente, linguagem simples, muito direta e objetiva.&lt;/p&gt;

&lt;p&gt;Após apresentado sobre AngularJS e MongoDB, chegamos ao back-end, com NodeJS e ExpressJS. Aqui é apresentado como é e como funciona uma API RESTful. Até então eu ainda tinha uma dúvida ou outra sobre o que era e como funcionava uma API RESTful. No livro, Adrian nos mostra os conceitos básicos introdutórios dela e como funciona uma API do tipo RESTful, e ainda, faz uma pequena comparação com outras metodologias, como SOAP, por exemplo.&lt;/p&gt;

&lt;p&gt;A partir desse momento sempre realizamos testes, com TDD e BDD. A cada requisição importante para nossa aplicação, realizamos um teste. No front-end, também realizamos testes, os famosos &lt;code class=&quot;highlighter-rouge&quot;&gt;e2e - end to end&lt;/code&gt;. Para testes de unidade, utilizamos o Karma e Mocha/Chai/SinonJS. Já para os testes fim a fim, no AngularJS, utilizamos o Protractor.&lt;/p&gt;

&lt;p&gt;Front-end e back-end prontos, bastou conectarmos o AngularJS à API REST do ExpressJS.&lt;/p&gt;

&lt;p&gt;Com isso pronto, começou a fase de implementação de novos recursos, como por exemplo, upload de imagens com &lt;code class=&quot;highlighter-rouge&quot;&gt;ng-file-upload&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;connect-multiparty&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tudo pronto? Não! Temos ainda uma visão sobre autorização e autenticação. O que é cada um e uma visão de alguns tipos de autenticação disponível atualmente, como por sessão, JWT, OAuth, PassportJS, MemoryStage e MongoStore. Além, é claro, de estratégias e rotas de autenticação. Afinal, em uma aplicação ecommerce não podemos deixar apenas uma opção de autenticação para o usuário.&lt;/p&gt;

&lt;p&gt;Uma das partes que mais fiquei surpreso foi a de checkout! Eu não fazia a mínima ideia de como isso seria desenvolvido em JS. Já vi alguns cases em PHP, mas JS não, ainda. Eis que sou apresentado ao carinha chamado &lt;code class=&quot;highlighter-rouge&quot;&gt;ngCart&lt;/code&gt;, módulo para AngularJS. Ao invés de desenvolvermos um módulo de checkout do zero, basta utilizarmos ele no nosso front-end e voilà. No back-end, também me surpreendi pelo módulo utilizado. Foi nos apresentado o &lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree&lt;/a&gt;, para receber pagamentos via cartão de crédito/débito e PayPal.&lt;/p&gt;

&lt;p&gt;Pra não conhece o &lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Uma maneira simples, robusto para aceitar pagamentos ou permitir a compra de quase qualquer lugar - em seu aplicativo móvel ou online. No topo da amplitude de clientes PayPal e Venmo, nossas integrações fáceis dará acesso a vários métodos de pagamento, preços simples, proteção de alto nível e suporte de classe mundial”.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Fiquei um pouquinho triste com ele, poxa, ainda não funciona no Brasil! Que pena! E falando nisso, não conheço um módulo nacional a nível Braintree para NodeJS. Se você conhece algum, por favor, deixe seu comentário aí! :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/tela01.png&quot; alt=&quot;Exemplo de tela do projeto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/tela02.png&quot; alt=&quot;Exemplo de tela do projeto&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;deploy-do-projeto&quot;&gt;Deploy do Projeto&lt;/h2&gt;

&lt;p&gt;Como o livro foi escrito e a aplicação exemplo foi desenvolvida em meados de 2015, as versões dos pacotes e dependências utilizar são um pouco antigas. Isso causou uma certa dor de cabeça durante o deploy.&lt;/p&gt;

&lt;p&gt;Tentei o deploy no Heroku e DigitalOcean. No Heroku foi onde encontrei maiores problemas. O pacote &lt;code class=&quot;highlighter-rouge&quot;&gt;generator-angular-fullstack&lt;/code&gt; sofreu com deploy no Heroku para várias pessoas, não fui o único. E a maioria das respostas que encontrei para isso é devido a versão antiga desse pacote apresenta inúmeros erros de deploy no Heroku.&lt;/p&gt;

&lt;p&gt;Já na DigitalOcean ainda sofri com alguns erros. Em várias tentativas, sejam em droplets com imagens prontas da MEAN Stack ou em um droplet configuranto tudo do zerto, mesmo seguindo todos os passos do livro vários processos foram &lt;strong&gt;killed&lt;/strong&gt; durante a instalação. Isso ocorreu devido a pacotes &lt;em&gt;decrapeted&lt;/em&gt; e versões antigas. Ou seja, DigitalOcean também não foi possível realizar o deploy.&lt;/p&gt;

&lt;p&gt;Agora, o OpenShift, estou na lista de espera para liberarem meu acesso. Assim que liberarem meu acesso, tentarei efetuar o deploy lá também.&lt;/p&gt;

&lt;p&gt;Ou seja, já aprendi mais uma coisinha aqui, trabalhar com versões antigas de pacotes e dependências pode me trazer uma certa baita dor de cabeça futuramente, amiguinhos! rsrs’&lt;/p&gt;

&lt;h2 id=&quot;tradução&quot;&gt;Tradução&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/wdys.gif&quot; alt=&quot;What did you say?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A tradução em si está boa. Porém faço algumas ressalvas. Jamais ouvi falar de &lt;strong&gt;views&lt;/strong&gt; como &lt;strong&gt;visões&lt;/strong&gt;, aí tá errado, eu acho. No decorrer do livro eu via &lt;strong&gt;visões&lt;/strong&gt; e já lia &lt;strong&gt;view&lt;/strong&gt;. Essa tradução para &lt;strong&gt;visões&lt;/strong&gt; não foi a melhor escolha, poderia ter ficado com &lt;strong&gt;view&lt;/strong&gt; mesmo. Assim como &lt;strong&gt;factory&lt;/strong&gt; como &lt;strong&gt;fábrica&lt;/strong&gt; também não fiquei satisfeito. Traduzir &lt;strong&gt;controllers&lt;/strong&gt; para &lt;strong&gt;controladores&lt;/strong&gt;, tudo bem.&lt;/p&gt;

&lt;p&gt;Outro detalhe que achei que não caiu bem foi traduzir &lt;strong&gt;promises&lt;/strong&gt; para &lt;strong&gt;promessas&lt;/strong&gt;! Não colou! rsrs’&lt;/p&gt;

&lt;p&gt;Por mais que seja termos que estejamos acostumados em uma aplicação em AngularJS, não ficou nada agradável ler dessa forma tais funcionalidades.&lt;/p&gt;

&lt;p&gt;Mas de uma maneira geral, a tradução do livro em si está tudo de acordo, uma ótima tradução. Inclusive, algumas notas da Novatec sobre a tradução, versões de pacotes e dependências. Show!&lt;/p&gt;

&lt;p&gt;Tem quem goste e ame o Grunt, tem quem odeie. Particularmente não gosto e prefiro mil vezes o Gulp. E tenho minhas opiniões a respeito de cada ferramenta.&lt;/p&gt;

&lt;p&gt;Mas não burro pra ficar de mimimi por qual ferramenta eu prefiro trabalhar pra deixar de aprender o que me foi proposto ou se existe uma melhor que a outra. Apesar de não gostar do Grunt, me dei bem com ele, tranquilão!&lt;/p&gt;

&lt;p&gt;Por que ponto negativo, então fdp? Porque se fosse eu, faria com Gulp! :p&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Que fique claro&lt;/strong&gt;, eu não gosto do Grunt. Você pode gostar ou não, é com você. Afinal, não existe melhor ou pior. Existe a que cada um utiliza a tecnologia na qual se familiriza mais e na qual de adequa mais ao seu projeto.&lt;/p&gt;

&lt;p&gt;Não precisamos ficar discutindo à toa, de mimimi à toa, por conta disso.&lt;/p&gt;

&lt;p&gt;Mais uma vez, &lt;strong&gt;que fique claro&lt;/strong&gt;, para essa aplicação ecommerce, o Grunt caiu como uma luva, assim como eu tenho certeza que o Gulp também cairia!&lt;/p&gt;

&lt;h2 id=&quot;próximos-passos&quot;&gt;Próximos passos&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/nowwhat.gif&quot; alt=&quot;Now what?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Após absorver todo esse conhecimento, o que fazer, o que comer, como viver? rsrs’&lt;/p&gt;

&lt;p&gt;Você pode visualizar todos os códigos que utilizei no meu &lt;a href=&quot;https://github.com/ednilsonamaral/livro-ecommerce-mean&quot;&gt;repositório no GitHub&lt;/a&gt;.E também, caso queira ver ele online, basta acessar &lt;a href=&quot;https://meanshopapp.herokuapp.com/&quot;&gt;https://meanshopapp.herokuapp.com/&lt;/a&gt; para ver os meus resultados. Eu segui a risca o que foi proposto no livro.&lt;/p&gt;

&lt;p&gt;Me deparei com situações que melhorias em algumas coisas, mas preferi deixar essas melhorias pro final, após concluir o livro.&lt;/p&gt;

&lt;p&gt;Se você notar, duas situações na qual está instável na aplicação publicada, login com redes sociais e checkout com Braintree não estão funcionando. O checkout não vai funcionar mesmo, com Braintree não. Já o login com redes sociais, espero implementar nas próximas semanas.&lt;/p&gt;

&lt;p&gt;Além disso tudo, juntamente com o &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;tio Suissa&lt;/a&gt; e &lt;a href=&quot;https://github.com/hc3&quot;&gt;Eliel&lt;/a&gt;, estamos preparando uma surpresinha sobre a continuação do conteúdo abordado nesse livro. Aguardem, que em breve, teremos mais novidades! xD&lt;/p&gt;

&lt;p&gt;&lt;em&gt;vamos refatorar? - eis a questão&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A partir de agora iremos dar ínico a refatoração e evolução dessa criançinha! Vamos iniciar nos próximos dias/semanas o processo de refatoração utilizando módulos atômicos! Aguarde por novidades e a continuação do primeiro ecommerce em MEAN do Brasil! =D&lt;/p&gt;

&lt;h2 id=&quot;concluindo&quot;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/ok.gif&quot; alt=&quot;Chuck Norris approves!!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;O básico de uma aplicação ecommerce foi nos apresentado e cumpriu com o objetivo do livro. Porém, ele vai além. Ele nos ensina a stack MEAN, testes com TDD e BDD, ferramentas úteis que podemos utilizar para desenvolvermos qualquer aplicação; nos ensina como realizar o deploy de nossa aplicação, e ainda dá sugestões de implementação de novos recursos para enriquecer nossa aplicação. Tem mais ainda, quer automatizar o deploy? Ele ensina também, com Capistrano!&lt;/p&gt;

&lt;p&gt;O conteúdo do livro é excelente, de altíssimo nível. Se você estava em dúvida em &lt;a href=&quot;http://novatec.com.br/livros/ecommerce-mean/&quot;&gt;comprar&lt;/a&gt; ou não, apenas &lt;a href=&quot;http://novatec.com.br/livros/ecommerce-mean/&quot;&gt;compre&lt;/a&gt;. Você aprenderá inúmeras coisas. Digo por experiência própria. Conheci a stack MEAN no último trimestre de 2015 e, agora, menos de um ano após, já aprendi a desenvolver um ecommerce com essa lindeza, vê se pode uma coisas dessa, rapaz!&lt;/p&gt;

&lt;p&gt;Eu era fichinha em JS, agora sou menos fichinha do que antes! :p&lt;/p&gt;

&lt;p&gt;Esse livro não fica atrelado apenas ao título, ensinar MEAN. Esquece isso quando &lt;a href=&quot;http://novatec.com.br/livros/ecommerce-mean/&quot;&gt;comprar esse livro&lt;/a&gt;. Ele vai muito além, te garanto!&lt;/p&gt;

&lt;p&gt;Caso tenha alguma dúvida, sugestão, reclamação, please, entre em contato comigo, através de um simples comentário ou através das redes sociais.&lt;/p&gt;

&lt;p&gt;Se gostou ou não, compartilhe com seus amigos desenvolvedores, full stacks JS, front-ends, back-ends! =p&lt;/p&gt;

&lt;p&gt;É isso aí pessoal, vaaleu, até mais! =D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/vlwflw.gif&quot; alt=&quot;Vaaleu, Faalo!&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Aug 2016 20:36:00 -0300</pubDate>
        <link>lucastafarelbs.github.io/review-livro-construindo-uma-aplicacao-ecommerce-com-mean/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/review-livro-construindo-uma-aplicacao-ecommerce-com-mean/</guid>
        
        
      </item>
    
      <item>
        <title>Padrões de Indentação com EditorConfig</title>
        <description>&lt;p&gt;Salve salve seres humaninhos, tudo na paz?! :)&lt;/p&gt;

&lt;p&gt;Quem aí nunca sofreu ao fazer um &lt;em&gt;pull&lt;/em&gt; no repositório que está trabalhando e se deparou com uma indentação horrível, certos arquivos com 2 espaços, outros com 4 espaços, outros espaços misturado? Quem nunca?&lt;/p&gt;

&lt;p&gt;E o pior disso tudo, quanto mais membros na equipe, maior esse problema será encontrado se não houver um padrão para todos.&lt;/p&gt;

&lt;p&gt;Tudo bem, a equipe pode muito bem decidir ter as mesmas configurações nos editores para o projeto X, aí não haveria problemas disso e tal. Mas não tem como automatizar isso?&lt;/p&gt;

&lt;p&gt;Sim, tem!!! =D&lt;/p&gt;

&lt;p&gt;Aqui entra em cena o &lt;a href=&quot;http://editorconfig.org/&quot;&gt;EditorConfig&lt;/a&gt;. Ele ajuda nós, desenvolvedores, a mantermos um padrão e uma certa consistência nos estilos de nossos códigos, independente da IDE ou do editor de código que trabalhemos.&lt;/p&gt;

&lt;p&gt;Em uma equipe de desenvolvimento é comum cada um trabalhar com sua IDE ou editor de código preferido. E cada IDE ou editor de código possui uma configuração diferente.&lt;/p&gt;

&lt;p&gt;Mas, se no inicio de nosso projeto, já utilizarmos o EditorConfig, esses problemas acabam.&lt;/p&gt;

&lt;p&gt;Vejamos abaixo como usufruir desse queridinho..&lt;/p&gt;

&lt;p&gt;Trabalhar com o EditorConfig é muito simples, alguns editores não necessitam de plugin para que ele funcione. Outros já necessitam.&lt;/p&gt;

&lt;h2 id=&quot;instalando-o-plugin-no-atom&quot;&gt;Instalando o plugin no Atom&lt;/h2&gt;

&lt;p&gt;No Atom, você pode instalar de duas maneiras:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Via terminal, com o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;apm install editorconfig&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Através do menu &lt;code class=&quot;highlighter-rouge&quot;&gt;Configurações &amp;gt; Instalar &amp;gt; Pesquisar&lt;/code&gt; por &lt;code class=&quot;highlighter-rouge&quot;&gt;editorconfig&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Após instalado, basta reiniciar o Atom que ele já funcionará normalmente! :)&lt;/p&gt;

&lt;h2 id=&quot;instalando-o-plugin-no-sublime&quot;&gt;Instalando o plugin no Sublime&lt;/h2&gt;

&lt;p&gt;O queridinho das américas, Sublime, também é muito simples instalar o plugin do EditorConfig:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Basta pressionar &lt;code class=&quot;highlighter-rouge&quot;&gt;CTRL + SHIFT + P&lt;/code&gt; e ir até o &lt;em&gt;Package Control&lt;/em&gt; e procurar por EditorConfig.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Assim como no Atom, após instalado basta reiniciar o Sublime que irá funcionar! :)&lt;/p&gt;

&lt;h2 id=&quot;instalando-o-plugin-em-outros-editores-de-código-e-ides&quot;&gt;Instalando o plugin em outros editores de código e IDEs&lt;/h2&gt;

&lt;p&gt;Atualmente, a infinidade de IDEs e editores de código que possuem plugin para o EditorConfig é um pouquinho grande. Pow, tem plugin até pra Notepad++ e NetBeans.&lt;/p&gt;

&lt;p&gt;Basta ir no site oficial e &lt;a href=&quot;http://editorconfig.org/#download&quot;&gt;ver a lista&lt;/a&gt; de IDEs e editores de código que possuem o plugin, seguir as instruções de instalação e serem felizes! :)&lt;/p&gt;

&lt;h2 id=&quot;usufruindo-dessa-belezinha&quot;&gt;Usufruindo dessa belezinha&lt;/h2&gt;

&lt;p&gt;Para usufruir dessa belezinha é muito simples, na raiz do diretório do projeto, basta criarmos um arquivo nomeado &lt;code class=&quot;highlighter-rouge&quot;&gt;.editorconfig&lt;/code&gt; e setarmos as configurações.&lt;/p&gt;

&lt;p&gt;Abaixo, um exemplo de configuração básica dele:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorConfig&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//EditorConfig.org&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorConfig&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Unix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newlines&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newline&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ending&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;every&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;end_of_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lf&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;insert_final_newline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Matches&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;multiple&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;brace&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;expansion&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;notation&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;charset&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;charset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;utf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;space&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indentation&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;space&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tab&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;indentation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;specified&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Makefile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tab&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Indentation&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JS&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;under&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lib&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;directory&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;space&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Matches&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exact&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;travis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yml&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;travis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;space&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Visualizando o código acima, temos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linha 4: seta a configuração de &lt;code class=&quot;highlighter-rouge&quot;&gt;root = true&lt;/code&gt; para que o editor de código ou IDE aceite as configurações do &lt;code class=&quot;highlighter-rouge&quot;&gt;.editorconfig&lt;/code&gt; em todos os arquivos, acima das configurações da IDE ou editor de código;&lt;/li&gt;
  &lt;li&gt;Nele, podemos definir como as quebras de linha serão representadas, através dos &lt;code class=&quot;highlighter-rouge&quot;&gt;lf&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;cr&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;crlf&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;Podemos definir nosso &lt;em&gt;charset&lt;/em&gt;;&lt;/li&gt;
  &lt;li&gt;No trecho &lt;code class=&quot;highlighter-rouge&quot;&gt;[*.py]&lt;/code&gt;, definimos que todos os arquivos que possuem a extensão &lt;code class=&quot;highlighter-rouge&quot;&gt;.py&lt;/code&gt; terão 4 espaços, representados pela &lt;strong&gt;tecla de espaço&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;Enquanto nos trechos &lt;code class=&quot;highlighter-rouge&quot;&gt;[*.js]&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;[{package.json,.travis.yml}]&lt;/code&gt; definimos que todos os arquivos de JS, o &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; e o arquivo &lt;code class=&quot;highlighter-rouge&quot;&gt;travis.yml&lt;/code&gt; irá ter 2 espaços representado pela &lt;strong&gt;tecla de espaço&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Agora, vamos a um exemplo com outros tipos de arquivo:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorConfig&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;awesome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//EditorConfig.org&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditorConfig&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Quebra&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;de&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;linhas&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;end_of_line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lf&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;insert_final_newline&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Definindo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;charset&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;charset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;utf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Indenta&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;çã&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TAB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;para&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pug&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tab&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Arquivos&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JS&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CSS&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tab&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Demais&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arquivos&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;importantes&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tab&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;indent_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ficou mais claro nesse exemplo? Acho que sim, né! Bom, vamos a explicação desse exemplo:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Nele, defino o &lt;em&gt;charset&lt;/em&gt; de arquivos JS, PUG (Jade) e HTML;&lt;/li&gt;
  &lt;li&gt;Defino também, 4 espaços para arquivos PUG (Jade) e HTML, representados pela &lt;strong&gt;tecla de TAB&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;E para os arquivos de CSS, Stylus e JS, defino 2 espaços, representados pela &lt;strong&gt;tecla de TAB&lt;/strong&gt;;&lt;/li&gt;
  &lt;li&gt;Assim como para os demais arquivos com extensão &lt;code class=&quot;highlighter-rouge&quot;&gt;.json&lt;/code&gt;, defino 2 espaços, representados pela &lt;strong&gt;tecla de TAB&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Viu como é simples, sem complicações? Agora, você tem o poder em suas mãos. Seja em equipe ou sozinho, o EditorConfig é &lt;strong&gt;indispensável&lt;/strong&gt;! Caso você queira explorar ainda mais os poderes do EditorConfig, basta entrar no site e dar uma olhada na &lt;a href=&quot;http://editorconfig.org/&quot;&gt;documentação oficial&lt;/a&gt; dele.&lt;/p&gt;

&lt;h2 id=&quot;concluindo&quot;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;O poder que o EditorConfig nos fornece pode parecer muito simples, mas não é. Ele em si, é simples. Porém o que podemos fazer com ele é de muito valor para nossos projetos de desenvolvimento.&lt;/p&gt;

&lt;p&gt;Sua configuração é muito simples, em poucos minutos você padroniza os espaçamentos com facilidade. A curva de aprendizado para utilizar o EditorConfig é muito baixa. Hoje em dia, a cada novo projeto que estou/contribuo, um dos primeiros arquivos que crio é o &lt;code class=&quot;highlighter-rouge&quot;&gt;.editorconfig&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Não perca tempo, comece a usar você também! =D&lt;/p&gt;

&lt;p&gt;Caso tenha alguma dúvida, sugestão, reclamação, please, entre em contato comigo, através de um simples comentário ou através das redes sociais.&lt;/p&gt;

&lt;p&gt;Se gostou ou não, compartilhe com seus amigos front-end e desenvolvedores em geral! =p&lt;/p&gt;

&lt;p&gt;É isso aí pessoal, vaaleu, até mais! =D&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Jul 2016 07:21:00 -0300</pubDate>
        <link>lucastafarelbs.github.io/padrao-de-indentacao-com-editorconfig/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/padrao-de-indentacao-com-editorconfig/</guid>
        
        
      </item>
    
      <item>
        <title>Workflow simples, porém muito eficiente</title>
        <description>&lt;p&gt;Salve salve peoples, tudo na paz?&lt;/p&gt;

&lt;p&gt;Não sei apenas eu ou mais alguém já passou por isso. A cada novo projeto, ter que refazer o workflow, com task runner, pré-processador CSS, template engine, frameworks, mi-mi-mi.&lt;/p&gt;

&lt;p&gt;Fui um pouquinho tapado em demorar pra ter um repositório como base de workflow! Eis que surgiu esse workflow simples, porém muito eficiente!&lt;/p&gt;

&lt;p&gt;Fiquei tão encanado com isso, que resolvi criar um workflow. Porém, uma coisa acabou me tirando o sono, literalmente. As tarefas do Gulp, muitas e muitas linhas no gulpfile.js.&lt;/p&gt;

&lt;p&gt;Sobre as tarefas do Gulp, tá lá no final do artigo. Mas leia tudinho, sem pressa! =D&lt;/p&gt;

&lt;p&gt;Nesse workflow utilizei as seguintes tecnologias:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gulp, como task runner;&lt;/li&gt;
  &lt;li&gt;Stylus, pré-processador CSS;&lt;/li&gt;
  &lt;li&gt;Nib, para alguns mixins Stylus, utilidades básicas;&lt;/li&gt;
  &lt;li&gt;Pug (Jade), como template engine;&lt;/li&gt;
  &lt;li&gt;CleanCSS, para minificar o CSS;&lt;/li&gt;
  &lt;li&gt;Gulp-concat, para concatenar os arquivos;&lt;/li&gt;
  &lt;li&gt;Imagemin, para minificar/otimizar imagens;&lt;/li&gt;
  &lt;li&gt;Gulp-rename, para renomear arquivos via tarefas do Gulp;&lt;/li&gt;
  &lt;li&gt;Plumber, para prever erros causados pelos pipe de plugins do Gulp;&lt;/li&gt;
  &lt;li&gt;Uglify, para minificar arquivos com UgliifyJS;&lt;/li&gt;
  &lt;li&gt;BrowserSync, para ter reload automático no browser durante o desenvolvimento;&lt;/li&gt;
  &lt;li&gt;Rupture, para media queries;&lt;/li&gt;
  &lt;li&gt;Jeet, como system grid. Mesmo estando descontinuado (ainda) é um excelente grid system e estável.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Para entendermos melhor como ficou tudo, vamos começar pela estrutura de arquivos:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/workflow-estrutura.png&quot; alt=&quot;Estrutura de Diretórios utilizadas nesse workflow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_public/&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Nessa pasta ficam os arquivos compilados, após o desenvolvimento. Vísivel no navegador; pronto para ser enviado para homologação. Separados pelas pastas css / img / js / &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_source/&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Aqui é onde a magia realmente acontece! rs’&lt;/li&gt;
  &lt;li&gt;Nosso ambiente de produção. Onde utilizo o Pug como template engine&lt;/li&gt;
  &lt;li&gt;Stylus como pré-processador CSS. Tentei implementar RSCSS &amp;amp; ITCSS como metodologias. Além da combinação Jeet + Nib + Rupture como grid system, mixins para Stylus e media queries, respectivamente.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;tasks&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Meu bebê do s2! Nessa pasta possui um arquivo.js para cada tarefa do Gulp.&lt;/li&gt;
  &lt;li&gt;No decorrer desse artigo irei entrar em mais detalhes de como modularizei as tarefas do Gulp.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rscss-e-itcss-why&quot;&gt;RSCSS e ITCSS? Why??&lt;/h2&gt;

&lt;p&gt;Sempre busco formas de padronizar minhas declarações CSS e uma arquitetura boa, de fácil manutenção. Li um pouco sobre &lt;strong&gt;BEM&lt;/strong&gt;, porém não gostei. Achei a nomenclatura das classes sugerida muito extensa e em determinados projetos completos poderia ser confuso para manutenção. Visto isso, encontrei dois artigos do &lt;a href=&quot;https://twitter.com/willian_justen', target='_blank'&quot;&gt;Willian Justen&lt;/a&gt;) sobre ambas as metodologias, &lt;a href=&quot;http://willianjusten.com.br/falando-sobre-rscss/&quot;&gt;RSCSS&lt;/a&gt; e &lt;a href=&quot;href='http://willianjusten.com.br/organizando-seu-css-com-itcss/&quot;&gt;ITCSS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Posso trabalhar com &lt;strong&gt;BEM&lt;/strong&gt; normalmente, sem problemas. Depende do projeto e especificações do cliente, óbvio. Porém, se puder trabalhar com RSCSS e ITCSS, trabalharei com essas metodologias. :)&lt;/p&gt;

&lt;p&gt;Ele explicou com uma didática tão leve que foi de longe um dos melhores artigos sobre arquiteturas CSS. Já tinha optado por ITCSS em outras leituras, porém esse artigo em específico concretizei minha decisão.&lt;/p&gt;

&lt;p&gt;Aqui, não irei entrar em detalhes de como funciona o ITCSS ou RSCSS. Para isso, passa lá no link do artigo que o Willian Justen compartilhou conosco, que praticamente é uma documentação em pt-BR! =)&lt;/p&gt;

&lt;p&gt;Digamos que você vá desenvolver um projeto complexo, de um portal para uma grande empresa/agência, um portal estático ou dinâmico, por exemplo, que irá ter 20 páginas ou mais. No momento em que formos definir a arquitetura CSS para o desenvolvimento vai começar a complicar. Visto isso, o &lt;strong&gt;ITCSS&lt;/strong&gt; surgiu, para organizar nosso CSS de forma escalável e de fácil manutenção.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Beleza, tio! Definimos a arquitetura. Mas e como iremos nomear as classes? Que tipo de padrão podemos utilizar pra isso?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Entra em cena o &lt;strong&gt;RSCSS&lt;/strong&gt;!!!!&lt;/p&gt;

&lt;p&gt;Quanto maior o projeto, maior vai ser o número de linhas de declarações CSS. E, acredite, se não houver um padrão, VAI DAR BO! Quem nunca se perguntou pra que classe X ou Y serve, pra que repetiu Z ou A, etc, etc.&lt;/p&gt;

&lt;p&gt;Nisso, o &lt;strong&gt;RSCSS&lt;/strong&gt; nos dá ideias claras de como nomear classes sem medo de nos perdemos futuramente. Facilitando assim que o processo de desenvolvimento do nosso CSS seja rentável para qualquer projeto front-end.&lt;/p&gt;

&lt;p&gt;Juntar as duas metodologias foi praticamente um casamento perfeito! Parece que as duas são feitas uma para a outra! =D&lt;/p&gt;

&lt;p&gt;Mais um ponto a favor do &lt;strong&gt;RSCSS&lt;/strong&gt; é que podemos utilizar essa metodologia junto com &lt;strong&gt;Atomic Design&lt;/strong&gt;. Já temos um padrão de atoms, molecules e organisms nas classes, porém podemos facilmente integrar as duas metodologias. E, podemos ir além, não parar nos atoms.&lt;/p&gt;

&lt;p&gt;Baseando-se nas aulas do curso &lt;a href=&quot;https://github.com/Webschool-io/be-mean-instagram&quot;&gt;Be MEAN&lt;/a&gt; do &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;Suissa&lt;/a&gt; onde ele nos ensina a utilizar Quarks, Hadrons, etc no back-end. &lt;a href=&quot;https://github.com/Webschool-io/Node-Atomic-Design-Modelo-Padrao&quot;&gt;Física louca&lt;/a&gt;, sem dó, porém, muito efetiva. E sim, podemos basearmos nisso e utilizar em nosso front-end!&lt;/p&gt;

&lt;h2 id=&quot;e-aquela-pastinha-_includes-ali-pra-que-serve&quot;&gt;E aquela pastinha &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; ali, pra que serve?&lt;/h2&gt;

&lt;p&gt;No &lt;strong&gt;Pug (Jade)&lt;/strong&gt; podemos utilizar includes. Digamos que você tenha um projeto web complexo, com front e back-end. No front-end, 90% das páginas irão utilizar o mesmo menu, mesmo header, mesmo footer. Apenas o conteúdo de cada página irá mudar. Pra que repetir esse código em todas as páginas ou porque não usar &lt;code class=&quot;highlighter-rouge&quot;&gt;extend template block content&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Simples, tornando a integração do back-end mais fácil, sem complicações, dinâmico. Com um simples include, podemos trabalhar no back-end para trocar o include X de poucas linhas em certos eventos. Já o extend teria um bloco maior, com mais linhas. O carregamento seria um pouco mais demorado que o include, mesmo não sendo notado a olho nú, mas seria.&lt;/p&gt;

&lt;p&gt;Visando a performance, fácil integração com back-end e fácil manutenção, a escolha para projetos complexos é ir de &lt;code class=&quot;highlighter-rouge&quot;&gt;include&lt;/code&gt;. Uma escolha pessoal, não é regra, não é padrão!&lt;/p&gt;

&lt;h2 id=&quot;gulp-deixando-o-mais-bonitinho-ainda-&quot;&gt;Gulp, deixando-o mais bonitinho ainda =)&lt;/h2&gt;

&lt;p&gt;A justificava para modularizar as tarefas &lt;strong&gt;Gulp&lt;/strong&gt; foi simples:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Se eu posso componetizar/modularizar meu CSS; com aplicações AngularJS; com aplicações PHP (MVC); com aplicações NodeJS s2; porque não posso fazer isso com as minhas tarefas do Gulp?”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Você, dev front-end que conhece e trabalha com Gulp, quantas vezes você parou pra pensar:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Poxa meu, quantas linhas eu não tenho em um simples gulpfile.js? Já passaram 110 linhas, que saco! Como posso melhorar isso? Não posso modularizar/componetizar igual fazemos com CSS?&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;Fiquei extremamente estressado em ver aquele horror. Então, mais noites com poucas horas de sono se foram, rsrs’.&lt;/p&gt;

&lt;p&gt;Encontrei inúmeros tutoriais a respeito, porém a maioria utilizava o Browserify ou Webpack. Lendo um pouco sobre cada um deles, acabei chegando a conclusão de que eles são indicados para projetos mais complexos. Um site, portal de notícias, portfolio, hotsite não vi necessidade de implementá-los. Seria um desperdício de tecnologia!&lt;/p&gt;

&lt;p&gt;Depois de tantas pesquisas, conheci a dependência
&lt;a href=&quot;https://www.npmjs.com/package/gulp-load-plugins&quot;&gt;gulp-load-plugins&lt;/a&gt; encontrando no blog da editora &lt;a href=&quot;https://www.packtpub.com/books/content/blogs&quot;&gt;Packt Publishing&lt;/a&gt; um EXCELENTE artigo escrito por Brian Hough: &lt;a href=&quot;https://www.packtpub.com/books/content/how-to-simplify-your-development-workflow-with-gulp&quot;&gt;How to Simplify Your Development Workflow with Gulp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Após todas as tarefas em arquivos separados, Gulp modularizado, belezinha, o arquivo &lt;code class=&quot;highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; ficou dessa forma:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s1&quot;&gt;'use strict'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Dev dependencies&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gulp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'gulp-load-plugins'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(),&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./config.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Browser Sync Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/browser-sync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Stylus Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/stylus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Pug Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/pug'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//JS Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/js-compile'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Default Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/imagemin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Watch Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/watch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Default Task&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tasksPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Com essa dependência, conseguimos criar um &lt;code class=&quot;highlighter-rouge&quot;&gt;arquivo.js&lt;/code&gt; para cada tarefa e no &lt;code class=&quot;highlighter-rouge&quot;&gt;gulpfile.js&lt;/code&gt; chamar cada tarefa utilizando o &lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Enquanto isso, consumimos o &lt;code class=&quot;highlighter-rouge&quot;&gt;config.json&lt;/code&gt; com os caminhos dos diretórios de cada CSS, Imagem, JS, HTML, seja do ambiente de desenvolvimento (&lt;code class=&quot;highlighter-rouge&quot;&gt;source&lt;/code&gt;) ou o destino (&lt;code class=&quot;highlighter-rouge&quot;&gt;_public&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Abaixo, você visualiza exemplo de duas tarefas, o &lt;code class=&quot;highlighter-rouge&quot;&gt;browser-sync.js&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;stylus.js&lt;/code&gt;, onde utilizar um simples &lt;code class=&quot;highlighter-rouge&quot;&gt;module.exports&lt;/code&gt; para exportamos uma função que já recebe como parâmetro, o próprio &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp&lt;/code&gt; além do &lt;code class=&quot;highlighter-rouge&quot;&gt;config.json&lt;/code&gt; e a dependência responsável por carregar todas as demais dependências do Gulp (plugins).&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;config.json&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tasksPath&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./tasks&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylusSrcFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./source/css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stylusDestFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./css&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pugSrcFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./source&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;pugDestFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jsSrcFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./source/js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jsDestFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./js&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;imgSrcFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./source/img&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;imgDestFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./img&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;browser-sync.js&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserSync&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'browser-sync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'browser-sync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;baseDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pugDestFolder&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

       &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stylusSrcFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/**/*.styl&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'stylus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;watch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pugDestFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/**/*.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pugDestFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/index.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;change&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stylus.js&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jeet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jeet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;rupture&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rupture'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;nib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;prefixer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'autoprefixer-stylus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserSync&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'browser-sync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'stylus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stylusSrcFolder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'/main.styl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stylus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prefixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jeet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rupture&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()],&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stylusSrcFolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'styles.css'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stylusDestFolder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;browserSync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Trabalhando dessa forma, caso surga alguma nova dependência e por consequência uma nova tarefa, basta criarmos um arquivo novo, chamarmos com o require e incluirmos nas demais tarefas, caso seja necessário. Fácil manutenção, fácil atualização, fácil integração!&lt;/p&gt;

&lt;h2 id=&quot;concluindo&quot;&gt;Concluindo..&lt;/h2&gt;

&lt;p&gt;Que artigo longo, rapaz! rs’&lt;/p&gt;

&lt;p&gt;A minha ideia aqui foi compartilhar um pouco de um workflow simples, porém eficiente atende às minhas necessidades atuais em front-end. Sei que tenho muito a melhorar, adicionar mais algumas coisinhas pra melhorar ainda mais esse workflow. Mas por enquanto, atende às minhas necessidades muito bem.&lt;/p&gt;

&lt;p&gt;Ainda é um dos primeiros artigos que escrevo, então sorry se não me expressei tão bem em alguns pontos. Se alguém quiser utilizar, fique a vontade, o código está todo em meu &lt;a href=&quot;https://github.com/ednilsonamaral/workflow&quot;&gt;GitHub&lt;/a&gt;. Peço apenas que dê os devidos créditos! =p&lt;/p&gt;

&lt;p&gt;Você também pode visualizar o resultado final desse workflow &lt;a href=&quot;https://ednilsonamaral.github.io/workflow-stylus/&quot;&gt;nesse link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Caso tenha alguma dúvida, sugestão, reclamação, please, entre em contato comigo, através de um simples comentário ou criando uma issue nesse &lt;a href=&quot;https://github.com/ednilsonamaral/workflow&quot;&gt;repositório&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Se gostou ou não, compartilhe com seus amigos front-end! =p&lt;/p&gt;

&lt;p&gt;É isso aí pessoal, vaaleu, até mais! =D&lt;/p&gt;

&lt;h2 id=&quot;referências&quot;&gt;Referências&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://willianjusten.com.br/falando-sobre-rscss/&quot;&gt;Falando sobre RSCSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://willianjusten.com.br/organizando-seu-css-com-itcss/&quot;&gt;Organizando seu CSS com ITCSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/&quot;&gt;ITCSS: SCALABLE AND MAINTAINABLE CSS ARCHITECTURE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.creativebloq.com/web-design/manage-large-css-projects-itcss-101517528&quot;&gt;Manage large CSS projects with ITCSS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://lucasmaiaesilva.com.br/grids-sem%C3%A2nticos-com-jeet/&quot;&gt;Grids Semânticos com Jeet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://codepen.io/suissa/pen/RNWeaE&quot;&gt;Jeet 5 - Mobile First (Stylus)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.packtpub.com/books/content/how-to-simplify-your-development-workflow-with-gulp&quot;&gt;How to Simplify Your Development Workflow with Gulp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://davidwalsh.name/stylus-rem&quot;&gt;Stylus PX to REM Mixin&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 08 Jul 2016 20:38:00 -0300</pubDate>
        <link>lucastafarelbs.github.io/workflow-simples-porem-eficiente/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/workflow-simples-porem-eficiente/</guid>
        
        
      </item>
    
      <item>
        <title>Decifrando Herança em JavaScript</title>
        <description>&lt;p&gt;Para linguagens orientadas à objetos, como em C++ e Java, é utilizado um comportamento diferente para compartilhar código entre entidades. Sua herança nada mais é que a capacidade de suas classes em compartilharem seus métodos e atributos entre si. Um exemplo disso, é definir a relação de uma classe com outra através da palavra &lt;code class=&quot;highlighter-rouge&quot;&gt;extends&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora, no JavaScript essa abordagem é um pouco diferente. Para compartilharmos código entre entidades devemos conhecer um pouco sobre protótipos.&lt;/p&gt;

&lt;h3 id=&quot;protótipos&quot;&gt;Protótipos&lt;/h3&gt;

&lt;p&gt;Quase todos os objetos, além de sua lista de propriedades, possuem um &lt;em&gt;prototype&lt;/em&gt;, ou &lt;strong&gt;protótipo&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Basicamente, um protótipo é outro objeto que é utilizado como fonte de &lt;em&gt;fallback&lt;/em&gt; para as propriedades. Ou seja, assim que um objeto recebe uma chamada em determinada propriedade que ele não possui, seu &lt;em&gt;prototype&lt;/em&gt; designado para aquela propriedade vai ser buscado, e, caso não encontre, irá buscar em outro, e assim por diante.&lt;/p&gt;

&lt;p&gt;Porém, se nos depararmos com um objeto vazio, o seu protótpio é o ancestral de todos os protótpios, ou seja, a entidade por trás da maioria dos objetos, o &lt;em&gt;Object.prototype&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;As relações dos objetos JavaScript formam uma estrutura em forma de árvore, e na raiz dessa estrutura se encontra o Object.prototype. Ele fornece alguns métodos que estão presentes em todos os objetos, como o toString, que converte um objeto para uma representação em string.&lt;/p&gt;

  &lt;p&gt;Muitos objetos não possuem o Object.prototype diretamente em seu prototype. Ao invés disso eles têm outro objeto que fornece suas propriedades padrão. Funções derivam do Function.prototype, e arrays derivam do Array.prototype.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;construtores&quot;&gt;Construtores&lt;/h3&gt;

&lt;p&gt;Podemos consedirar a maneira mais simples de criar objetos que vai herdar algum &lt;em&gt;prototype&lt;/em&gt; é através de um construtor. Para isso, ao chamarmos uma função, basta à invocarmos com a palavra-chave &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;, fazendo assim que ela seja um construtor.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  

&lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1º Ano&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;//criando o objeto com o new  &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bruna&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;O &lt;em&gt;prototype&lt;/em&gt; de um construtor é o &lt;code class=&quot;highlighter-rouge&quot;&gt;Function.prototype&lt;/code&gt;, onde sua propriedade &lt;em&gt;prototype&lt;/em&gt; será o &lt;em&gt;prototype&lt;/em&gt; de instâncias criadas através dele, porém não será seu próprio &lt;em&gt;prototype&lt;/em&gt;. Enquanto outros objetos têm um &lt;em&gt;prototype&lt;/em&gt; que pode ser obtido através do &lt;code class=&quot;highlighter-rouge&quot;&gt;Object.getPrototypeOf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Vale ressaltar que devemos notar a diferença entrea a maneira que um &lt;em&gt;prototype&lt;/em&gt; é associado a um construtor e a maneira que outros objetos têm um &lt;em&gt;prototype&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Além disso, nessa aborgadem de invocarmos o &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;, se não o invocarmos, o &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; dentro da função irá apenas se referenciar ao objeto global, assim podendo sobreescrever algumas variáveis que foram declaradas anteriormente.&lt;/p&gt;

&lt;p&gt;No exemplo a seguir, vemos mais uma possibilidade de herança:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;criaAluno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;na&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;na&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
        &lt;span class=&quot;na&quot;&gt;serie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1º Ano&quot;&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;criaAluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bruna&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;criaAluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;José&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O exemplo acima demonstra, que, ao invés de criarmos um objeto para cada aluno, crio um único objeto, que irá retornar outro objeto, com os campos. Então, a cada novo aluno, basta chamarmos essa função e setarmos os valores dos campos.&lt;/p&gt;

&lt;h3 id=&quot;utilizando-call-e-apply&quot;&gt;Utilizando &lt;code class=&quot;highlighter-rouge&quot;&gt;call&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;&lt;/h3&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;idade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  

&lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serie&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1º Ano&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;//criando o objeto com o new  &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bruna&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bruna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;//criando através de um objeto vazio e utilizando __proto__  &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__proto__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;//então, passamos como contexto e invocamos com o call ou apply  &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Aluno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;José&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;c1&quot;&gt;//Aluno.apply(jose, [&quot;José&quot;, 6]);  &lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;No exemplo acima temos os mesmos métodos e atributos vistos anteriormente. Porém, agora, utilizamos a função &lt;code class=&quot;highlighter-rouge&quot;&gt;Aluno&lt;/code&gt; para herdamos nossos outros objetos e protótipos.&lt;/p&gt;

&lt;p&gt;Note que para &lt;code class=&quot;highlighter-rouge&quot;&gt;bruna&lt;/code&gt; invocamos &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;; enquanto &lt;code class=&quot;highlighter-rouge&quot;&gt;jose&lt;/code&gt; criamos um objeto vazio, passamos como contexto e invocamos através de &lt;code class=&quot;highlighter-rouge&quot;&gt;call&lt;/code&gt; ou &lt;code class=&quot;highlighter-rouge&quot;&gt;apply&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;como-fica-a-compatibilidade-com-os-navegadores-ie&quot;&gt;Como fica a compatibilidade com os navegadores? (IE)&lt;/h3&gt;

&lt;p&gt;Infelizmente (SQN), a ES5 funciona &lt;em&gt;parcialmente&lt;/em&gt; em versões do IE da 9 para as mais atuais. Na versão 9, funciona parcialmente. Porém, caso você seja um carinha chato, do tipo que curte &lt;em&gt;Graceful Degradation&lt;/em&gt;, vai de &lt;a href=&quot;https://github.com/es-shims/es5-shim&quot;&gt;shim&lt;/a&gt;. Mas, se você for legal e adepto a &lt;em&gt;Progressive Enhancement&lt;/em&gt;, então não terás muitos problemas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/ednilsonamaral/be-mean-artigos/master/img/es5.jpg&quot; alt=&quot;Compatibilidade ECMAScript5&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;concluindo&quot;&gt;Concluindo&lt;/h3&gt;

&lt;p&gt;Como vimos, existem várias formas heranças no JavaScript, baseado em protótipo. E, antes de sair escrevendo códigos complexos, devemos estar claros quanto ao entendimetno de protótipos e como funcionam heranças neles.&lt;/p&gt;

&lt;p&gt;Um ponto vital no qual devemos pensar quando pensamos em desempenho de nossa aplicação, para evitar algumas dores de cabeça, podemos utilizar closures ao invés de &lt;em&gt;prototypes&lt;/em&gt;. Isso se diz necessário quando temos um número grande de uma cadeia de protótipos.&lt;/p&gt;

&lt;p&gt;Esse artigo é uma introdução à herança em JS, espero que tenha sido o mais claro e objetivo possível. Se encontrarem algum errinho, &lt;em&gt;please&lt;/em&gt;, diz aí, de boa! Até mais!! :)&lt;/p&gt;

&lt;h3 id=&quot;fontes&quot;&gt;Fontes&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/braziljs/eloquente-javascript/blob/817711f1145f331ac7a5e08c4de1fa987b886a21/chapters/06-a-vida-secreta-dos-objetos.md&quot;&gt;A vida secreta dos objetos - Eloquente JavaScript&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=1Y0nSEMvTt0&quot;&gt;Desvendando a linguagem JavaScript - #15 - Herança - Parte 1 - Rodrigo Branas&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=hDhoO86cfh8&quot;&gt;Desvendando a linguagem JavaScript - #15 - Herança - Parte 2 - Rodrigo Branas&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://loopinfinito.com.br/2012/05/04/heranca-em-javascript-parte-1/&quot;&gt;Herança em JavaScript parte I - Loop Infinito&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://loopinfinito.com.br/2013/02/05/heranca-em-javascript-parte-2/&quot;&gt;Herança em JavaScript parte II - Loop Infinito&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://frontinbrazil.com.br/entendendo-heranca-no-javascript/&quot;&gt;Entendendo herança no JavaScript&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/es-shims/es5-shim&quot;&gt;ES5 - Shim&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 07:35:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/decifrando-heranca-em-javascript/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/decifrando-heranca-em-javascript/</guid>
        
        
      </item>
    
      <item>
        <title>Garbage Collection</title>
        <description>&lt;p&gt;Basicamente é uma forma de gerenciamento autómática de memória. Onde o &lt;em&gt;garbage&lt;/em&gt; ou simplesmente coletor, tenta recuperar lixo, ou seja, recuperar a memória ocupada por objetos que não estão mais em uso pelo sistema.&lt;/p&gt;

&lt;p&gt;Esse processo é automático e invisível ao programador. O JavaScript usa o &lt;em&gt;garbage collection&lt;/em&gt; (coleta de lixo) para recuperar a memória ocupada por &lt;em&gt;strings&lt;/em&gt;, &lt;em&gt;objects&lt;/em&gt;, &lt;em&gt;arrays&lt;/em&gt; e funções que não estão mais em uso.&lt;/p&gt;

&lt;p&gt;Isso é uma vantagem ao programador que não precisa se preocupar em liberar memória.&lt;/p&gt;

&lt;p&gt;Podemos destacar como característica fundamental de &lt;em&gt;garbage collection&lt;/em&gt; que ele deve ser capaz de determinar quando é seguro recuperar memória. Ele nunca vai recuperar objetos que ainda estão em uso.&lt;/p&gt;

&lt;h2 id=&quot;como-é-a-execução-de-funções-e-armazenamento-de-variáveis-com-javascript&quot;&gt;Como é a execução de funções e armazenamento de variáveis com JavaScript&lt;/h2&gt;

&lt;p&gt;Diferentemente de outras linguagens de baixo nível, como C, por exemplo, o JavaScript não possui gerenciamento de memória primitivas.&lt;/p&gt;

&lt;p&gt;Os valores do JavaScript são armazenados (alocados) quando objetos, &lt;em&gt;strings&lt;/em&gt;, etc., são criados. E, após seu uso, essa memória na qual foi alocado é liberada. Esse processo de liberar memória do que não está mais em uso é o &lt;em&gt;garbage collection&lt;/em&gt;, mencionado acima.&lt;/p&gt;

&lt;p&gt;As alocações de variáveis no JavaScript não feitas conforme elas são declaras, conforme o exemplo abaixo:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;123&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// aloca memória para um número  &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;azerty&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// aloca memória para uma string  &lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
  &lt;span class=&quot;na&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  
  &lt;span class=&quot;na&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// aloca memória para um objeto e seus valores contidos  &lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// (assim como o objeto) aloca memória para o vetor e   &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// seus valores contidos  &lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;abra&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Como podemos observar no exemplo acima, ele aloca na memória conforme vamos declarando nossas variáveis.&lt;/p&gt;

&lt;p&gt;As funções, também são alocadas conforme são declaradas. No caso de funçoes, ele aloca como um objeto que pode ser chamado.&lt;/p&gt;

&lt;p&gt;Definir uma função não basta para executá-la. Definir é simplesmente dar um nome a função e especificar o que será feito quando tal função for chamada.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  

&lt;span class=&quot;c1&quot;&gt;//ou  &lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;media&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Podemos chamar a função das duas maneiras acima. Ou também, chamar uma função dentro de outra função. As funções são objetos, e, esses objetos têm métodos.&lt;/p&gt;

&lt;h2 id=&quot;fontes&quot;&gt;Fontes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://docstore.mik.ua/orelly/webprog/jscript/ch04_05.htm#IXT-4-56957&quot;&gt;Garbage Collection - Docstore - O’Reilly - JavaScript The Definitive Guide&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://v8project.blogspot.com.br/2015/08/getting-garbage-collection-for-free.html&quot;&gt;Getting Garbage Collection for Free&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Memory_Management#Garbage_collection&quot;&gt;Garbage Collection - Mozilla Developer Network&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Fun%C3%A7%C3%B5es#Calling_functions&quot;&gt;Funções - Mozilla Developer Network&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2015 14:00:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/garbage-collection/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/garbage-collection/</guid>
        
        
      </item>
    
      <item>
        <title>Autenticação no MongoDB</title>
        <description>&lt;h2 id=&quot;qual-a-diferença-entre-autenticação-e-autorização&quot;&gt;Qual a diferença entre Autenticação e Autorização?&lt;/h2&gt;

&lt;p&gt;Tentarei responder essa pergunta dando um exemplo. Quando vamos logar em um determinado sistema com nosso usuário e senha, enviamos ao server uma solicitação de &lt;strong&gt;autenticação&lt;/strong&gt;, para que seja feito um processo de verificação da nossa identididade. Assim sendo, nossa identidade identificada, então, receberemos &lt;strong&gt;autorização&lt;/strong&gt; ou não para realizarmos determinadas tarefas.&lt;/p&gt;

&lt;p&gt;Mesmo &lt;strong&gt;autenticação&lt;/strong&gt; e &lt;strong&gt;autorização&lt;/strong&gt; sejam ligadas entre si, elas são diferentes. De uma forma resumida, &lt;strong&gt;autenticação&lt;/strong&gt; irá verificar a identidade de um usuário, enquanto a &lt;strong&gt;autorização&lt;/strong&gt; vai determinar o acesso desse usuário e quais recursos e operações são concedidas a ele.&lt;/p&gt;

&lt;h2 id=&quot;descreva-aqui-o-passo-a-passo-como-criar-um-usuário-administrador-e-um-usuário-comum&quot;&gt;Descreva aqui o passo-a-passo como criar um usuário administrador e um usuário comum&lt;/h2&gt;

&lt;p&gt;Para criarmos usuários no MongoDB, devemos utilizar a função &lt;code class=&quot;highlighter-rouge&quot;&gt;db.createUser()&lt;/code&gt;. A sintaxe básica para a criação de um novo usuário no MongoDB é a seguinte:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{ user: &quot;&amp;lt;name&amp;gt;&quot;,  
  pwd: &quot;&amp;lt;cleartext password&amp;gt;&quot;,  
  customData: { &amp;lt;any information&amp;gt; },  
  roles: [  
    { role: &quot;&amp;lt;role&amp;gt;&quot;, db: &quot;&amp;lt;database&amp;gt;&quot; },  
  ]  
}  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Onde iremos informar o nome, senha, algumas informações adicionas no &lt;code class=&quot;highlighter-rouge&quot;&gt;customData&lt;/code&gt;, se quisermos ou não. Os campos de nome, senha e roles são obrigatórios, já o campo customData é opcional. Em &lt;code class=&quot;highlighter-rouge&quot;&gt;roles&lt;/code&gt; iremos informar quais os privilégios para esse usuário e em qual &lt;code class=&quot;highlighter-rouge&quot;&gt;database&lt;/code&gt; ele irá ter tais privilégios.&lt;/p&gt;

&lt;h3 id=&quot;criando-usuário-comum&quot;&gt;Criando Usuário Comum&lt;/h3&gt;

&lt;p&gt;Se passarmos durante o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.createUser()&lt;/code&gt; sem nenhum &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;, informando apenas o nome do database que o usuário vai ter autorização de acesso, então, o MongoDB vai retornar um erro, como visto no trecho a seguir:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin&amp;gt; db.createUser(  
		{  
			user: &quot;comum&quot;,  
			pwd: &quot;comum123&quot;,  
			roles: [{db: &quot;admin&quot;}]  
		}  
	)  

2015-12-03T21:57:07.174-0200 E QUERY    [thread1] Error: couldn't add user: Missing expected field &quot;role&quot; :  
_getErrorWithCode@src/mongo/shell/utils.js:23:13  
DB.prototype.createUser@src/mongo/shell/db.js:1225:11  
@(shell):1:1  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;O erro acima diz que é necessário passar algum valor no campo &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt;. Então, devemos criar um usuário comum, do tipo apenas leitura da seguinte forma:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin&amp;gt; db.createUser(  
		{  
			user: &quot;comum&quot;,  
			pwd: &quot;comum123&quot;,  
			roles: [{role: &quot;read&quot;, db: &quot;admin&quot;}]  
		}  
	)  

Successfully added user: {  
  &quot;user&quot;: &quot;comum&quot;,  
  &quot;roles&quot;: [  
    {  
      &quot;role&quot;: &quot;read&quot;,  
      &quot;db&quot;: &quot;admin&quot;  
    }  
  ]  
}  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;criando-usuário-administrador&quot;&gt;Criando Usuário Administrador&lt;/h3&gt;

&lt;p&gt;Para criarmos um usuário administrador o processo é o mesmo. Só muda o array role. No exemplo a seguir utilizo o &lt;code class=&quot;highlighter-rouge&quot;&gt;userAdminAnyDatabase&lt;/code&gt; que tem os mesmos privilégios do role &lt;code class=&quot;highlighter-rouge&quot;&gt;userAdmin&lt;/code&gt;. A diferença entre eles é que o &lt;code class=&quot;highlighter-rouge&quot;&gt;userAdminAnyDatabase&lt;/code&gt; é aplicável a todos os bancos em um cluster.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin&amp;gt; db.createUser(  
		{  
			user: &quot;userFoda&quot;,  
			pwd: &quot;foda321&quot;,  
			roles: [{role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot;}]  
		}  
	)  

Successfully added user: {  
  &quot;user&quot;: &quot;userFoda&quot;,  
  &quot;roles&quot;: [  
    {  
      &quot;role&quot;: &quot;userAdminAnyDatabase&quot;,  
      &quot;db&quot;: &quot;admin&quot;  
    }  
  ]  
}  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Então, assim, listamos os usuários criados:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;admin&amp;gt; db.system.users.find()  
{  
  &quot;_id&quot;: &quot;admin.TesteAdmin&quot;,  
  &quot;user&quot;: &quot;TesteAdmin&quot;,  
  &quot;db&quot;: &quot;admin&quot;,  
  &quot;credentials&quot;: {  
    &quot;SCRAM-SHA-1&quot;: {  
      &quot;iterationCount&quot;: 10000,  
      &quot;salt&quot;: &quot;GnomEunpcaUNPDR5X4ztuw==&quot;,  
      &quot;storedKey&quot;: &quot;h+t/LNSbi621xrZIrVKDCXVhD8c=&quot;,  
      &quot;serverKey&quot;: &quot;qh4JmtNei6712TTl1xDcTsLI8Iw=&quot;  
    }  
  },  
  &quot;roles&quot;: [  
    {  
      &quot;role&quot;: &quot;userAdminAnyDatabase&quot;,  
      &quot;db&quot;: &quot;admin&quot;  
    }  
  ]  
}  
{  
  &quot;_id&quot;: &quot;admin.comum&quot;,  
  &quot;user&quot;: &quot;comum&quot;,  
  &quot;db&quot;: &quot;admin&quot;,  
  &quot;credentials&quot;: {  
    &quot;SCRAM-SHA-1&quot;: {  
      &quot;iterationCount&quot;: 10000,  
      &quot;salt&quot;: &quot;JDqV1XQcJ9PVKd6rPNKPwQ==&quot;,  
      &quot;storedKey&quot;: &quot;5UQNVA94E++61ShBzOpXgVc5iHg=&quot;,  
      &quot;serverKey&quot;: &quot;hgI0LAWXL5jLoY9oGBygbx0kyuE=&quot;  
    }  
  },  
  &quot;roles&quot;: [  
    {  
      &quot;role&quot;: &quot;read&quot;,  
      &quot;db&quot;: &quot;admin&quot;  
    }  
  ]  
}  
{  
  &quot;_id&quot;: &quot;admin.userFoda&quot;,  
  &quot;user&quot;: &quot;userFoda&quot;,  
  &quot;db&quot;: &quot;admin&quot;,  
  &quot;credentials&quot;: {  
    &quot;SCRAM-SHA-1&quot;: {  
      &quot;iterationCount&quot;: 10000,  
      &quot;salt&quot;: &quot;8PSlbiYYVXbe1K2FEBbEZQ==&quot;,  
      &quot;storedKey&quot;: &quot;QAUumSjFFjakYkgoFV58Z7+P3k8=&quot;,  
      &quot;serverKey&quot;: &quot;Ev/kr3Pymj+HBqoqap+/KTXUmK4=&quot;  
    }  
  },  
  &quot;roles&quot;: [  
    {  
      &quot;role&quot;: &quot;userAdminAnyDatabase&quot;,  
      &quot;db&quot;: &quot;admin&quot;  
    }  
  ]  
}  
Fetched 3 record(s) in 7ms  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;cluster-administration-roles&quot;&gt;Cluster Administration Roles&lt;/h2&gt;

&lt;p&gt;Caso tenhamos um cluster e queiramos ter um usuário com privilégios de atuar em vários databases, não precisamos ter um usuário para cada servidor. Para resolver isso, temos o &lt;strong&gt;cluster administrator roles&lt;/strong&gt;. Eles não são limitados a réplicas e shardings.&lt;/p&gt;

&lt;p&gt;Os roles possíveis para os privilégios em um usuários admin de um cluster são:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clusterAdmin&lt;/code&gt;: É o maior privilégio para usuários admini em clusters. Inclui todos os privilégios que serão listados e explicados abaixo. Também, possui o privilégio da ação de &lt;code class=&quot;highlighter-rouge&quot;&gt;dropDatabase&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clusterManager&lt;/code&gt;: Fornece o gerenciamento e monitoramento das ações no cluster. Um usúário com esse &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt; pode acessar as configurações de databases locais, que são usadas em réplicas e shardings. Como um todo, são fornecidas ações desde &lt;code class=&quot;highlighter-rouge&quot;&gt;addShard&lt;/code&gt; até &lt;code class=&quot;highlighter-rouge&quot;&gt;resync&lt;/code&gt;. Suas ações fornecidas para todos os databases no cluster vão desde &lt;code class=&quot;highlighter-rouge&quot;&gt;enableSharding&lt;/code&gt; até &lt;code class=&quot;highlighter-rouge&quot;&gt;splitVector&lt;/code&gt;. Além, é claro, de &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;remove&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;update&lt;/code&gt;. Basicamente, aqui o cara faz de um tudo no cluster.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clusterMonitor&lt;/code&gt;: Fornece &lt;strong&gt;apenas&lt;/strong&gt; leitura (&lt;code class=&quot;highlighter-rouge&quot;&gt;read-only&lt;/code&gt;) para ferramentas de monitoramento no cluster. Um exemplo de ferramenta para monitoramento é o &lt;a href=&quot;https://www.mongodb.com/cloud&quot;&gt;MongoDB Cloud Manager&lt;/a&gt;. Suas ações vão desde &lt;code class=&quot;highlighter-rouge&quot;&gt;connPoolStats&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;netstat&lt;/code&gt; à &lt;code class=&quot;highlighter-rouge&quot;&gt;serverStatus&lt;/code&gt; e &lt;code class=&quot;highlighter-rouge&quot;&gt;shardingState&lt;/code&gt;. De uma forma resumidade, aqui o cara só vai ficar olhando o que está sendo feito no cluster.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hostManager&lt;/code&gt;: Já com este &lt;code class=&quot;highlighter-rouge&quot;&gt;role&lt;/code&gt; é possível monitorar e gerenciar os servers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;privilege-actions&quot;&gt;Privilege Actions&lt;/h2&gt;

&lt;p&gt;As &lt;em&gt;privilege actions&lt;/em&gt; ou ações de privilégio definem quais são as operações que determinado usuário pode executar ou não através de algum recurso.&lt;/p&gt;

&lt;p&gt;No MongoDB um privilégio dispõe de um recurso e as ações que são permitidas para esses recursos. Além disso, o MongoDB fornece algumas funções integradas com uma combinação de recursos pré-definidos e ações permitidas, como veremos abaixo.&lt;/p&gt;

&lt;h3 id=&quot;ações-de-escrita&quot;&gt;Ações de Escrita&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt;: para buscar documentos em uma determinada coleção;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt;: para inserir novos documentos em uma determina coleção;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;remove&lt;/code&gt;: para remover documentos em uma determinada coleção;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;update&lt;/code&gt;: para atualizar documentos em uma determinada coleção.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-de-gerenciamento-de-databases&quot;&gt;Ações de Gerenciamento de Databases&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;changeCustomData&lt;/code&gt;: aqui o usuário pode alterar as informações contidas no &lt;code class=&quot;highlighter-rouge&quot;&gt;custom information&lt;/code&gt; de qualquer usuário da database que ele possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;changeOwnCustomData&lt;/code&gt;: aqui o usuário pode alterar suas próprias informações de forma personalizada;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;changeOwnPassword&lt;/code&gt;: aqui o usuário pode alterar a sua senha de acesso;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;changePassword&lt;/code&gt;: aqui o usuário pode alterar a senha de acesso de qualquer usuário da database que ele possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;createCollection&lt;/code&gt;: aqui o usuário pode criar uma nova coleção na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;createIndex&lt;/code&gt;: aqui o usuário pode criar uma nova index na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;createRole&lt;/code&gt;: aqui o usuário pode criar novas roles na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;createUser&lt;/code&gt;: pode criar novos usuários na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dropCollection&lt;/code&gt;: pode deletar uma coleção na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dropRole&lt;/code&gt;: pode deletar uma ou mais roles na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dropUser&lt;/code&gt;: pode deletar um usuário na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;emptycapped&lt;/code&gt;: aqui o usuário é capaz de remover todos os documentos de uma determinada coleção utilizando o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;emptycapped&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;enableProfiler&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.setProfilingLevel()&lt;/code&gt;, que nada mais é que modificar o nível de perfil do usuário atual para capturar dados sobre o seu desempenho;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grantRole&lt;/code&gt;: aqui é possível alterar qualquer role no database para qualquer usuário de qualquer databade do sistema;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;killCursors&lt;/code&gt;: o usuário pode matar os cursores em determinadas coleções;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;revokeRole&lt;/code&gt;: o usuário pode remover qualquer role de qualquer usuário de qualquer database no sistema;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;unlock&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.fsyncUnlock()&lt;/code&gt;, que nada mais é que desbloquear um serviço para que seja possível escrever e/ou inverter o funcionamento de uma operação no MongoDB. Normalmente é utilizada em uma sequência de operações de backups de databases;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;viewRole&lt;/code&gt;: o usuário visualiza as informações de qualquer role na database que possui privilégios;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;viewUser&lt;/code&gt;: o usuário visualiza as informações de qualquer usuário na database que possui privilégios.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-de-gerenciamento-de-deployment-implantação&quot;&gt;Ações de Gerenciamento de Deployment (Implantação)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;authSchemaUpgrade&lt;/code&gt;: o usuário pode dar um upgrade em processos de sistemas existentes que usam autenticação e autorização entre as versões 2.4 à 2.6 e de 2.6 à 3.0;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cleanupOrphaned&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;cleanupOphaned&lt;/code&gt; no cluster. Esse comando faz com que seja excluído de um shard documentos órfãos cujo seus valores não pertençam a esse shard;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cpuProfiler&lt;/code&gt;: o usuário pode ativar e utilizar o CPU profiler no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;inprog&lt;/code&gt;: o usuário pode utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.currentOp()&lt;/code&gt; que irá retornar as operações ativas e pendentes no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;invalidateUserCache&lt;/code&gt;: é possível liberar informações do usuário do cache na memória RAM, incluindo a remoção de credenciais e papéis de cada usuário. Com isso é possível limpar o cache do usuário em qualquer momento;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;killop&lt;/code&gt;: é possível finalizar uma determinada operação, sendo que deve ser especificada pelo seu ID;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;planCacheRead&lt;/code&gt;: o usuário pode visualizar os planos de list e querys para o cache na database ou coleções;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;planCacheWrite&lt;/code&gt;: o usuário pode escrever e/ou limpar e/ou modificar os planos de list e querys para cache nas coleções e databases;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;storageDetails&lt;/code&gt;: o usuário pode utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;storageDetails&lt;/code&gt; nas coleções ou databases que possui privilégios.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-de-replications&quot;&gt;Ações de Replications&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;appendOplogNote&lt;/code&gt;: o usuário pode adicionar algumas notas ao &lt;code class=&quot;highlighter-rouge&quot;&gt;oplog&lt;/code&gt; no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;replSetConfigure&lt;/code&gt;: o usuário pode configurar uma &lt;code class=&quot;highlighter-rouge&quot;&gt;replica_set&lt;/code&gt; no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;replSetGetStatus&lt;/code&gt;: o usuário pode ver o status atual da replica no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;replSetHeartbeat&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;replSetHeartbeat&lt;/code&gt;, que serve para determinadas funcionalidades em um conjunto de replicas;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;replSetStateChange&lt;/code&gt;: o usuário pode alterar/gerenciar o estado atual da réplica no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;resync&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;resync&lt;/code&gt; no cluster, para resincronizar a replica primária e secundária (master - slave), nunca replicas em conjunto.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-de-sharding&quot;&gt;Ações de Sharding&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;addShard&lt;/code&gt;: é possível adicionar um shard no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;enableSharding&lt;/code&gt;: o usuário consegue ativar um shard na database ou coleções em uso;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;flushRouterConfig&lt;/code&gt;: é possível limpar as informaçoẽs do cluster que estão em cache e recarrega os metadados do cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getShardMap&lt;/code&gt;: é um comando interno que suporta algumas funcionalidades de sharding;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getShardVersion&lt;/code&gt;: é um comando interno que suporta algumas funcionalidades de sharding;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;listShards&lt;/code&gt;: retorna a lista de shards configurados;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;moveChunk&lt;/code&gt;: é um comando de administração interno, capaz de mover os chunks entre os shards;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;removeShard&lt;/code&gt;: remove um shard do cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shardingState&lt;/code&gt;: é um comando de administração que mostra o estado dos shardings no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;splitChunk&lt;/code&gt;: é um comando de administração interno, capaz de dividir os chunks das coleções ou databases;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;splitVector&lt;/code&gt;: é um comando interno que suporta operações de metadados nos cluster que possuem shards.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-dos-administração-de-servidores&quot;&gt;Ações dos Administração de Servidores&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;applicationMessage&lt;/code&gt;: é possível postar uma mensagem personalizada para o log de auditoria, através do comando &lt;code class=&quot;highlighter-rouge&quot;&gt;logApplicationMessage&lt;/code&gt;;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;closeAllDatabases&lt;/code&gt;: o usuário pode fechar todas as databases no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;collMod&lt;/code&gt;: é possível adicionar um conjunto de &lt;em&gt;flags&lt;/em&gt; para modificar o comportamento do MongoDB;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;compact&lt;/code&gt;: é possível regravar e desfragmentar todos os dados e indices em uma coleção do database;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;connPoolSync&lt;/code&gt;: é um comando interno aplicável no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;convertToCapped&lt;/code&gt;: é possível converter uma coleção &lt;code class=&quot;highlighter-rouge&quot;&gt;not-capped&lt;/code&gt; para &lt;code class=&quot;highlighter-rouge&quot;&gt;capped&lt;/code&gt; dentro da database;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dropDatabase&lt;/code&gt;: é possível apagar um database;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dropIndex&lt;/code&gt;: é possível apagar um indice de uma determinada coleção no database;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;fsync&lt;/code&gt;: força o serviço &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; para que dê um &lt;em&gt;flush&lt;/em&gt; em todas as escritas pendentes na camada de armazenamento em disco, sendo aplicável no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getParameter&lt;/code&gt;: é um comando de administração interno capaz de recuperar o valor das opções configuradas anteriormente, aplicável no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hostInfo&lt;/code&gt;: retorna informações sobre o server que o MongoDB está rodando atualmente, aplicável no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;logRotate&lt;/code&gt;: é um comando de administração interno capaz de fazer um “gira gira” nos logs do MongoDB para que o mesmo não concentre os logs em um único arquivo, assim não consumindo muito espaço em disco;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;reIndex&lt;/code&gt;: apaga todos os indices de um coleção e as cria novamente;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;renameCollectionSameDB&lt;/code&gt;: renomeia uma coleção no database em uso;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;repairDatabase&lt;/code&gt;: checa e repara um database que apresente inconsistência no armazenamento dos dados;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;setParameter&lt;/code&gt;: é possível alterar alguns parâmetros no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shutdown&lt;/code&gt;: limpa todos os databases e encerra seus processos;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;touch&lt;/code&gt;: carrega os dados da camada de armazenamento de dados em memória.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-de-diagnósticos&quot;&gt;Ações de Diagnósticos&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;collStats&lt;/code&gt;: retorna uma variedade de estatísticas de armazenamento de uma determina coleção;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;connPoolSync&lt;/code&gt;: é um comando interno aplicável no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cursorInfo&lt;/code&gt;: retorna algumas informações a respeito do cursor;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dbHash&lt;/code&gt;: é um comando com suporte há algumas configurações no servidor;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dbStats&lt;/code&gt;: retorna uma variedade de estatísticas sobre o database em uso;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;diagLogging&lt;/code&gt;: é um comando adicional capaz de retornar dados adicionais para fins de diagnósticos;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getCmdLineOpts&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;getCmdLineOpts&lt;/code&gt; no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;getLog&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;getLog&lt;/code&gt; no cluster;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;indexStats&lt;/code&gt;: na versão 3.0 do MongoDB esse comando foi removido, porém, anteriormente, era possível retornar algumas estatísticas sobre os indices de determinadas coleções do database;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;listDatabases&lt;/code&gt;:  lista os databases com algumas estatísticas básicas;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;listCollections&lt;/code&gt;: lista todas as coleções do database com algumas estatísticas básicas;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;listIndexes&lt;/code&gt;: lista todos os indices de determina coleção com algumas estatísticas básicas;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat&lt;/code&gt;: é possível utilizar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;netstat&lt;/code&gt;, aplicável ao mongos;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;serverStatus&lt;/code&gt;: retorna algumas estatísticas sobre o status do servidor;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;validate&lt;/code&gt;: verifica as estruturas de nomes das coleções e indices, retorna uma representação disso em disco;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;: é um comando de administração interno capaz de retornar estatísticas de uso para cada coleção do database.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;ações-internas&quot;&gt;Ações Internas&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;anyAction&lt;/code&gt;: permite qualquer ação em um recurso especifico;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;internal&lt;/code&gt;: permite ações internas em circunstâncias excepcionais.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 09 Dec 2015 19:00:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/autenticacao-no-mongodb/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/autenticacao-no-mongodb/</guid>
        
        
      </item>
    
      <item>
        <title>O Básico de MongoDB</title>
        <description>&lt;p&gt;No meu último post falei um pouco sobre a stack MEAN, e o M dessa sigla nada mais é que MongoDB. Mas que parada louca é essa, parça?! Irei explicar nesse post exatamente isso.&lt;/p&gt;

&lt;h2 id=&quot;sql-vs-nosql&quot;&gt;SQL vs NoSQL&lt;/h2&gt;

&lt;p&gt;Bem sabemos que existe o modelo relacional de banco de dados, como SQL. Mas e o que vem a ser esse tal de NoSQL?&lt;/p&gt;

&lt;p&gt;NoSQL não quer dizer &lt;em&gt;Não SQL&lt;/em&gt;, seu conceito é de ser um banco de dados não relacional e de código aberto. Para explicar melhor o que vem a ser NoSQL, irei usar um exemplo dado pelo &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;Suissa&lt;/a&gt; durante uma aula de MongoDB no curso de &lt;a href=&quot;https://github.com/Webschool-io/be-mean-instagram&quot;&gt;Be MEAN&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Para entender melhor o NoSQL, pensaremos em uma analogia utilizando cervejas. Aquelas cervejas Pilsens da vida (Skol, Bhrama, Sub-zero) são banco de dados relacionais, iguais. Agora, as cervejas NoSQL são as diferentes, cada uma com suas características marcantes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Os banco de dados em NoSQL são baseados em grafos não relacionais. Ele é ótimo em resolver problemas especificos, de uma forma muito melhor do que banco de dados relacionais.&lt;/p&gt;

&lt;p&gt;Uma das principais diferenças entre bancos de dados relacionais e NoSQL é que, enquanto os bancos de dados relacionais nós os estruturamos sabendo quais repostas teremos, quais entradas, o NoSQL o que realmente importa são as perguntas e não as respostas. Ou seja, a normalização de um banco de dados não relacional será de acordo com as perguntas do seu sistema.&lt;/p&gt;

&lt;h2 id=&quot;mongodb-o-que-é-mesmo&quot;&gt;MongoDB, o que é mesmo?&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;MongoDB (do inglês humongous, “gigantesco”) é uma aplicação de código aberto, de alta performance, sem esquemas, orientado a documentos. Foi escrito na linguagem de programação C++. Além de orientado a documentos, é formado por um conjunto de documentos JSON. Muitas aplicações podem, dessa forma, modelar informações de modo muito mais natural, pois os dados podem ser aninhados em hierarquias complexas e continuar a ser indexáveis e fáceis de buscar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ah, sabe mais uma coisa legal do MongoDB, ele não possui JOIN. Ainda não.&lt;/p&gt;

&lt;p&gt;E o mais impressionante do MongoDB, ele aceita &lt;strong&gt;JavaScript&lt;/strong&gt;! Sua API é uma das mais fáceis de utilizar. Ele possui &lt;strong&gt;schemaless&lt;/strong&gt;, por isso não possui &lt;strong&gt;schema&lt;/strong&gt;.&lt;/p&gt;

&lt;h4 id=&quot;mongodb-é-para-programadores-e-não-para-dbas-da-vida-ficadica&quot;&gt;MongoDB é para programadores e não para DBA’s da vida! #FicaDica&lt;/h4&gt;

&lt;h3 id=&quot;como-é-seu-armazenamento&quot;&gt;Como é seu armazenamento?&lt;/h3&gt;

&lt;p&gt;O MongoDB trabalho com &lt;em&gt;Memory Mapped Files&lt;/em&gt;, ou seja, ele vai persistindo os dados sequencialmente no seu hard disk.&lt;/p&gt;

&lt;p&gt;Quando criamos um &lt;em&gt;database&lt;/em&gt; no MongoDB, ele já pré-aloca 80MB, para que os dados sejam inseridos sequencialmente. Mas ele não vai levantar esses dados pré-alocados diretamente no HD, ele vai para a memória RAM. E, quando a sua memória RAM ter toda sua capacidade usada, existe um carinha chamado &lt;strong&gt;sharding&lt;/strong&gt;, que vai quebrar os dados em pequenos pacotes e alocar em outros servidores.&lt;/p&gt;

&lt;h3 id=&quot;terminologia&quot;&gt;Terminologia&lt;/h3&gt;

&lt;p&gt;SQL &amp;gt; MongoDB&lt;br /&gt;
Database &amp;gt; Database&lt;br /&gt;
Table &amp;gt; Collection&lt;br /&gt;
Rows &amp;gt; JSON&lt;br /&gt;
Query &amp;gt; Query&lt;br /&gt;
Index &amp;gt; Index&lt;br /&gt;
Partition &amp;gt; Shard&lt;/p&gt;

&lt;p&gt;Enquanto no SQL utilizamos tabelas, no MongoDB trabalhamos com coleções (&lt;em&gt;collections&lt;/em&gt;). Ao invés de rows, temos documentos JSON.&lt;/p&gt;

&lt;p&gt;Já deu pra sentir um pouco da pegada do MongoDB é louca, né? É só o começo, parça! ;)&lt;/p&gt;

&lt;h3 id=&quot;instalação-e-documentação&quot;&gt;Instalação e Documentação&lt;/h3&gt;

&lt;p&gt;Para a instalação do MongoDB no seu computador, é muito simples, caso você &lt;strong&gt;não use&lt;/strong&gt; Windows. Se você ainda usa Widnows, boa sorte, pois vai precisar! hehe’&lt;/p&gt;

&lt;p&gt;Brincadeiras a parte, independente do sistema operacional que você utilize (eu não uso Windows), recomendo fortemente um artigo sobre &lt;a href=&quot;https://github.com/Webschool-io/be-mean-instagram/blob/master/Apostila/module-mongodb/pt-br/installation.md&quot;&gt;como instalar&lt;/a&gt; o MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.mongodb.org/&quot;&gt;Nesse link&lt;/a&gt;, encontramos a documentação oficial do MongoDB. E mesmo sendo em inglês, indispensável!&lt;/p&gt;

&lt;h3 id=&quot;começando-os-trabalhos-p&quot;&gt;Começando os Trabalhos :p&lt;/h3&gt;

&lt;p&gt;Os exemplos que postarei no decorrer desse post, realizei no Debian. Eu já deixei meu MongoDB para iniciar seu serviço já quando ligo o PC. Mas caso aí pra você ele não inicie automaticamente, baste deixar um terminal aberto com o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; e então abrir outro terminal para trabalhar com o MongoDB.&lt;/p&gt;

&lt;p&gt;O &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; apenas é o comando responsável por iniciar o serviço do MongoDB, então, se ele não inicia automaticamente quando seu PC liga, toda vez que for utilizar o MongoDB deve executar esse comando e só fechar esse terminal quando não trabalhar mais com o MongoDB.&lt;/p&gt;

&lt;p&gt;Agora, após deixar o terminal do &lt;code class=&quot;highlighter-rouge&quot;&gt;mongod&lt;/code&gt; aberto, temos outro terminal para utilizarmos o MongoDB. Temos duas maneiras de iniciar o MongoDB:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mongo&lt;/code&gt; &amp;gt; para iniciar o MongoDB direto, então ele conectará no banco de dados &lt;em&gt;test&lt;/em&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mongo nome_database&lt;/code&gt; &amp;gt; para iniciar o MongoDB já conectado em um banco de dados especifico.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Independente se você conectar no database &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; ou diretamente em um database especifico (&lt;code class=&quot;highlighter-rouge&quot;&gt;mongo nome_database&lt;/code&gt;), você poderá lista todos os banco de dados com o &lt;code class=&quot;highlighter-rouge&quot;&gt;show dbs&lt;/code&gt; de qualquer banco de dados conectado. Ou seja, mesmo eu estando conectado no &lt;code class=&quot;highlighter-rouge&quot;&gt;bancoTest&lt;/code&gt;, poderei ver a lista de todos os outros bancos conectados através do &lt;code class=&quot;highlighter-rouge&quot;&gt;show dbs&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;inserindo-documento&quot;&gt;Inserindo documento&lt;/h3&gt;

&lt;p&gt;Digamos que você inicie o MongoDB com o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;mongo bancoTeste&lt;/code&gt;, e der um &lt;code class=&quot;highlighter-rouge&quot;&gt;show dbs&lt;/code&gt;, verá que o banco &lt;strong&gt;bancoTeste&lt;/strong&gt; não está listado. Mas por que? Simples, o MongoDB só cria o seu banco de dados quando for inserido algum objeto dentro de uma coleção.&lt;/p&gt;

&lt;p&gt;A sintaxe básica do MongoDB é &lt;code class=&quot;highlighter-rouge&quot;&gt;db.nome_coleção.função_desejada()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;No MongoDB, temos duas maneiras de inserir novos objetos. Ou é através de uma variável e passando via parâmetro quando chamaos a função &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt; ou diretamente como parâmetro.&lt;/p&gt;

&lt;h4 id=&quot;direto-na-função-insert&quot;&gt;Direto na função &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;Para inserirmos um objeto diretamente como parâmetro da função &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt;, é como o exemplo a seguir: &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.insert({name: &quot;Ednilson&quot;})&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;via-variável&quot;&gt;Via variável&lt;/h4&gt;

&lt;p&gt;Agora, se optarmos por inserirmos um objeto via variável, teremos dois passos:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Criar a variável: &lt;code class=&quot;highlighter-rouge&quot;&gt;var json = {name: &quot;Ednilson&quot;}&lt;/code&gt;;&lt;br /&gt;
&lt;strong&gt;2.&lt;/strong&gt; Chamar a função &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt; passando como parâmetro a variável criada anteriormente: &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.insert(json)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Qual a maneira mais fácil que você identificou de adicionar um objeto na coleção desejada? Via variável, lógico, né! Se não foi via variável, why? Tell me, please! :p&lt;/p&gt;

&lt;p&gt;Agora, dê o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;show dbs&lt;/code&gt; e o que acontece? Seu &lt;code class=&quot;highlighter-rouge&quot;&gt;bancoTeste&lt;/code&gt; foi criado com sucesso, parça!&lt;/p&gt;

&lt;p&gt;Também podemos criar uma variável e adicionar vários documentos dentro da mesma variável. Mas como? Em forma de array, como no seguinte exemplo: &lt;code class=&quot;highlighter-rouge&quot;&gt;var array = [{name: &quot;Anderson Silva&quot;, age: 45}, {name: &quot;Chris Weidman&quot;, age: 25}, {name: &quot;Eli Manning&quot;, age: 28}]&lt;/code&gt;. E então chamar a função &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.insert(array)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora que inseri, como vejo o que foi inserido ou o que tem na minha coleção? Simples também, parça! Basta dar um comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.find()&lt;/code&gt;. Apenas com o &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt;, ele vai lista todos os objetos na coleção. Agora se você quer ver um especifico, o primeiro, por exemplo, basta dar o comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.findOne()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Acima, vimos como inserir esses objetos na nossa coleção. Porém, eles são estão salvos no banco ainda. Para salvar, basta chamarmos a função &lt;code class=&quot;highlighter-rouge&quot;&gt;save&lt;/code&gt;, da seguinte forma: &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.save(array)&lt;/code&gt;. Se você preferir dar o &lt;code class=&quot;highlighter-rouge&quot;&gt;save&lt;/code&gt; sem o &lt;code class=&quot;highlighter-rouge&quot;&gt;insert&lt;/code&gt;, também é possível.&lt;/p&gt;

&lt;h3 id=&quot;hora-do-select-sqn&quot;&gt;Hora do &lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;, #SQN!&lt;/h3&gt;

&lt;p&gt;Para buscar documentos, temos:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find()&lt;/code&gt;: dando apenas um &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.find()&lt;/code&gt;, sem passar nenhum parâmetro, ele irá mostrar todos os registros na tela.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;findOne(): ele retorna apenas um único documento: &lt;/code&gt;db.colecao.findOne()`.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Irei te recomendar a leitura &lt;a href=&quot;http://imasters.com.br/artigo/17308/mongodb/como-utilizar-selects-com-mongodb/?trace=1519021197&amp;amp;source=author-archive&quot;&gt;desse artigo&lt;/a&gt;, um pouco antigo, mas explica com detalhes como funciona a busca de documentos com MongoDB. #FicaDICA&lt;/p&gt;

&lt;h3 id=&quot;e-como-fica-o-update&quot;&gt;E como fica o UPDATE?&lt;/h3&gt;

&lt;p&gt;Atualizar um documento pode ser feito tanto com o &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.save()&lt;/code&gt; como utilizar &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.update()&lt;/code&gt;. No comando &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.update()&lt;/code&gt; nós passamos 3 parâmetros, sendo eles:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;query;&lt;/li&gt;
  &lt;li&gt;modificadores;&lt;/li&gt;
  &lt;li&gt;options.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A sintaxe básica é: &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.update(query, modificadores, options)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Antes de exemplificar como funciona o UPDATE no MongoDB, vamos ver o que são e como funcionam os &lt;strong&gt;operadores de modificação&lt;/strong&gt;!&lt;/p&gt;

&lt;h4 id=&quot;operadores-de-modificação&quot;&gt;Operadores de Modificação&lt;/h4&gt;

&lt;h5 id=&quot;set&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$set&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Ele modifica um valor ou cria esse valor, caso ele não exista. Sua sintaxe básica é &lt;code class=&quot;highlighter-rouge&quot;&gt;{$set: {campo: valor}}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Agora, vamos buscar nossos documentos e copiar um &lt;strong&gt;_id&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;_id&quot;: ObjectId(&quot;56672470c75dad95fecca13c&quot;), &quot;name&quot;: &quot;Anderson Silva&quot;, &quot;age&quot;: 45}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nisso, criaremos uma variável &lt;code class=&quot;highlighter-rouge&quot;&gt;var query = {&quot;_id&quot;: ObjectId(&quot;56672470c75dad95fecca13c&quot;)}&lt;/code&gt; contendo a &lt;strong&gt;_id&lt;/strong&gt; escolhida. Então, utilizando o &lt;code class=&quot;highlighter-rouge&quot;&gt;$set&lt;/code&gt; iremos adicionar um novo campo no nosso documento: &lt;code class=&quot;highlighter-rouge&quot;&gt;var mod = {$set: {sex: &quot;Male&quot;}}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Como vemos no código acima, criamos uma variável &lt;strong&gt;mod&lt;/strong&gt; que está nosso modificado &lt;code class=&quot;highlighter-rouge&quot;&gt;$set&lt;/code&gt;. E então, passamos o &lt;code class=&quot;highlighter-rouge&quot;&gt;db.colecao.update(query, mod)&lt;/code&gt; com o query que possui o _id escolhido anteriormente e nosso operador &lt;code class=&quot;highlighter-rouge&quot;&gt;$set&lt;/code&gt;. Agora, ao buscarmos o documento pela query visualizamos que o campo &lt;code class=&quot;highlighter-rouge&quot;&gt;age&lt;/code&gt; foi criado e adicionado o valor especificado na variável &lt;code class=&quot;highlighter-rouge&quot;&gt;mod&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id=&quot;unset&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$unset&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Se temos como adicionar um novo campo em nosso documento, temos como remover esse campo? Sim, utilizando o operador &lt;code class=&quot;highlighter-rouge&quot;&gt;$unset&lt;/code&gt;! Ele funciona como o &lt;code class=&quot;highlighter-rouge&quot;&gt;$set&lt;/code&gt;, porém ao invés de adicionar, ele &lt;strong&gt;remove&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;Sua sintaxe básica é &lt;code class=&quot;highlighter-rouge&quot;&gt;{$unset: {campo: valor}}&lt;/code&gt;.&lt;/p&gt;

&lt;h5 id=&quot;inc&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$inc&lt;/code&gt;&lt;/h5&gt;

&lt;p&gt;Esse operador incrementa um valor no campo desejado. Caso o campo não exista, esse campo é criado e inserido o valor passado por ele. Sua sintaxe é &lt;code class=&quot;highlighter-rouge&quot;&gt;{$inc: {campo: valor}}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Let’s code! Ainda utilzando nosso _id na variável query, iremos aumentar a idade do carinha lá, simples: &lt;code class=&quot;highlighter-rouge&quot;&gt;var mod = {$inc: {age: 1}}&lt;/code&gt;. Ao invés de 45 anos, agora ele tem 46.&lt;/p&gt;

&lt;p&gt;E para voltar aos 45 anos? Basta passar um valor negativo: &lt;code class=&quot;highlighter-rouge&quot;&gt;var mod = {$inc: {age: -1}}&lt;/code&gt;!&lt;/p&gt;

&lt;p&gt;Além desses operadores citados, temos os operadores de array. Não os citarei aqui no blog, para saber mais, basta acessar a documentação oficial do MongoDB, cujo link tá lá em cima do post! ;)&lt;/p&gt;

&lt;h3 id=&quot;concluindo&quot;&gt;Concluindo&lt;/h3&gt;

&lt;p&gt;É fácil trabalhar com MongoDB, não é?! Se eu continuar nesse post, sairá mais uma apostila do que post. Ficou interessado em aprender mais sobre MongoDB, então já sabe, vem acompanhar o curso &lt;a href=&quot;https://github.com/Webschool-io/be-mean-instagram/&quot;&gt;Be MEAN&lt;/a&gt; do &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;Suissa&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Qualquer dúvida, sugestão, crítica, por favor, deixe seu comentário logo abaixo. Vaaleu! Até a próxima! :)&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Dec 2015 21:00:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/o-basico-de-mongodb/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/o-basico-de-mongodb/</guid>
        
        
      </item>
    
      <item>
        <title>MEAN, o que é isso?</title>
        <description>&lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt; - banco de dados NoSQL, orientado a documentos;&lt;br /&gt;
&lt;strong&gt;Express.js&lt;/strong&gt; - framework de desenvolvimento web para Node.js;&lt;br /&gt;
&lt;strong&gt;Angular.js&lt;/strong&gt; - framework MVC para JavaScript;&lt;br /&gt;
&lt;strong&gt;Node.js&lt;/strong&gt; - ambiente de execução JavaScript.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;MEAN is a framework for an easy starting point with MongoDB, Node.js, Express, and AngularJS based applications. It is designed to give you a quick and organized way to start developing MEAN based web apps with useful modules like Mongoose and Passport pre-bundled and configured. We mainly try to take care of the connection points between existing popular frameworks and solve common integration problems.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Já pensou em ser um cara fodão, &lt;em&gt;full stack&lt;/em&gt;, não trabalhar apenas com o front ou back? Trabalhar desde o front até o back? Então, tá-lhe MEAN, parça!&lt;/p&gt;

&lt;p&gt;Em resumo, essa seleção de ferramentas nos proporciona trabalhar, praticamente, com uma linguagem, &lt;strong&gt;JAVASCRIPT&lt;/strong&gt;! Isso é uma imensa vantagem para desenvolvermos aplicações &lt;em&gt;real-time&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Além disso, trabalhar apenas com JS nos dá uma grande vantagem, pois podemos trabalhar com o MongoDB, que é orientado a documentos e é NoSQL.&lt;/p&gt;

&lt;p&gt;Eu não tenho muita experiência com backend, e agora? Mano, Javascript! Por isso essa stack esta cada vez mais famosa e mais utilizada em aplicações &lt;em&gt;real-time&lt;/em&gt;. Podemos trabalhar com JavaScript em todas essas ferramentas, desde o front até o backend.&lt;/p&gt;

&lt;h3 id=&quot;e-onde-posso-aprender-tudo-isso-fera&quot;&gt;E onde posso aprender tudo isso, fera?&lt;/h3&gt;

&lt;p&gt;Sabe o &lt;a href=&quot;https://twitter.com/osuissa&quot;&gt;Suissa&lt;/a&gt;? Então, ele fundou a Webschool, certo?! Ele está dando o curso &lt;a href=&quot;https://github.com/Webschool-io/be-mean-instagram/&quot;&gt;Be MEAN&lt;/a&gt;, totalmente FREE, seu doido! Nesse curso ele ensina toda a stack MEAN e como criar uma aplicação &lt;em&gt;real-time&lt;/em&gt; igual do Instagram.&lt;/p&gt;

&lt;p&gt;Agora, imagina só aprender tudo isso cara, o que poderemos fazer depois desse curso?! Véi, o bagulho vai ficar louco, só sei que nada sei desses paranauê aí.&lt;/p&gt;

&lt;p&gt;Se você é um cara legal, seja um apoiador desse curso. Por mais que ele seja free, gera um custo gigantesco. Imagina ensinar toda essa stack, sai caro. Se você pra você pagar todo esse curso, não sairia por menos de R$ 1.000,00. E você pode doar () quantias pequenas a partir de R$ 50,00. Pow cara, 50 pila e aprender essa lindeza de stack e muito mais ainda? Se você não apoair, tá de brincadeira na tomateira, parça!&lt;/p&gt;

&lt;p&gt;O que formos aprendendo, tentarei fazer alguns posts de coisas simples e básicas que é possíve realizar com essa stack. Falarei muito dela, por sinal! :p&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/be-mean-chamada.jpg&quot; alt=&quot;Be MEAN&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ah, na boa mano, nesse curso aí, não aprenderemos apenas a stack MEAN, hein. Terá muito mais coisas. Se eu fosse você, auto daria um presente de Natal, doando nem que seja 50 pila e estudar essa stack e muito mais! Lhe garanto, serão seus 50 reais bem mais investidos em tua vidinha humana! ;)&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Dec 2015 22:58:00 -0200</pubDate>
        <link>lucastafarelbs.github.io/mean-o-que-e-isso/</link>
        <guid isPermaLink="true">lucastafarelbs.github.io/mean-o-que-e-isso/</guid>
        
        
      </item>
    
  </channel>
</rss>
